{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/page.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"activitySection\": \"page-module___8aEwW__activitySection\",\n  \"address\": \"page-module___8aEwW__address\",\n  \"arrow\": \"page-module___8aEwW__arrow\",\n  \"assetsLabel\": \"page-module___8aEwW__assetsLabel\",\n  \"banner\": \"page-module___8aEwW__banner\",\n  \"bannerLink\": \"page-module___8aEwW__bannerLink\",\n  \"baseIcon\": \"page-module___8aEwW__baseIcon\",\n  \"chatArea\": \"page-module___8aEwW__chatArea\",\n  \"chatFooter\": \"page-module___8aEwW__chatFooter\",\n  \"chatPlaceholder\": \"page-module___8aEwW__chatPlaceholder\",\n  \"chatSection\": \"page-module___8aEwW__chatSection\",\n  \"checkBtn\": \"page-module___8aEwW__checkBtn\",\n  \"copyBtn\": \"page-module___8aEwW__copyBtn\",\n  \"disclaimer\": \"page-module___8aEwW__disclaimer\",\n  \"disclaimerToggle\": \"page-module___8aEwW__disclaimerToggle\",\n  \"ethAmount\": \"page-module___8aEwW__ethAmount\",\n  \"ethBalance\": \"page-module___8aEwW__ethBalance\",\n  \"ethIcon\": \"page-module___8aEwW__ethIcon\",\n  \"ethValue\": \"page-module___8aEwW__ethValue\",\n  \"header\": \"page-module___8aEwW__header\",\n  \"headerLeft\": \"page-module___8aEwW__headerLeft\",\n  \"headerRight\": \"page-module___8aEwW__headerRight\",\n  \"joinClubBtn\": \"page-module___8aEwW__joinClubBtn\",\n  \"logo\": \"page-module___8aEwW__logo\",\n  \"main\": \"page-module___8aEwW__main\",\n  \"messageCounter\": \"page-module___8aEwW__messageCounter\",\n  \"page\": \"page-module___8aEwW__page\",\n  \"profileBtn\": \"page-module___8aEwW__profileBtn\",\n  \"recoveryLink\": \"page-module___8aEwW__recoveryLink\",\n  \"recoveryNotice\": \"page-module___8aEwW__recoveryNotice\",\n  \"sectionTitle\": \"page-module___8aEwW__sectionTitle\",\n  \"tradingWallet\": \"page-module___8aEwW__tradingWallet\",\n  \"transaction\": \"page-module___8aEwW__transaction\",\n  \"transactionDetails\": \"page-module___8aEwW__transactionDetails\",\n  \"usageBar\": \"page-module___8aEwW__usageBar\",\n  \"usageProgress\": \"page-module___8aEwW__usageProgress\",\n  \"version\": \"page-module___8aEwW__version\",\n  \"walletAddress\": \"page-module___8aEwW__walletAddress\",\n  \"walletBalance\": \"page-module___8aEwW__walletBalance\",\n  \"walletInfo\": \"page-module___8aEwW__walletInfo\",\n  \"walletModeBtn\": \"page-module___8aEwW__walletModeBtn\",\n  \"walletProvider\": \"page-module___8aEwW__walletProvider\",\n  \"walletSection\": \"page-module___8aEwW__walletSection\",\n  \"walletTitle\": \"page-module___8aEwW__walletTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/SignIn.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"disclaimer\": \"SignIn-module__bAJvaa__disclaimer\",\n  \"header\": \"SignIn-module__bAJvaa__header\",\n  \"logo\": \"SignIn-module__bAJvaa__logo\",\n  \"main\": \"SignIn-module__bAJvaa__main\",\n  \"recoverLink\": \"SignIn-module__bAJvaa__recoverLink\",\n  \"signInBox\": \"SignIn-module__bAJvaa__signInBox\",\n  \"signInButton\": \"SignIn-module__bAJvaa__signInButton\",\n  \"signInContainer\": \"SignIn-module__bAJvaa__signInContainer\",\n  \"signInInfo\": \"SignIn-module__bAJvaa__signInInfo\",\n  \"version\": \"SignIn-module__bAJvaa__version\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/components/SignIn.tsx"],"sourcesContent":["import { usePrivy } from \"@privy-io/react-auth\";\nimport { useSolanaWallets } from \"@privy-io/react-auth/solana\";\nimport styles from \"./SignIn.module.css\";\nimport { useEffect } from \"react\";\n\nexport default function SignIn() {\n  const { \n    login, \n    ready, \n    user,\n    authenticated\n  } = usePrivy();\n  \n  const { createWallet } = useSolanaWallets({\n    onSuccess: ({ wallet }) => {\n      console.log(\"Solana wallet created successfully:\", wallet);\n    },\n    onError: (error) => {\n      console.error(\"Error creating Solana wallet:\", error);\n    }\n  });\n\n  // Check if we need to create a Solana wallet after login\n  useEffect(() => {\n    const createSolanaWalletIfNeeded = async () => {\n      if (authenticated && user) {\n        try {\n          // Check if user already has a Solana wallet\n          const hasSolanaWallet = user.linkedAccounts.some(\n            account => account.type === \"wallet\" && account.walletClientType === \"solana\"\n          );\n          \n          // If not, create one\n          if (!hasSolanaWallet) {\n            console.log(\"Creating Solana wallet...\");\n            await createWallet();\n          }\n        } catch (error) {\n          console.error(\"Error checking Solana wallet:\", error);\n        }\n      }\n    };\n    \n    createSolanaWalletIfNeeded();\n  }, [authenticated, user, createWallet]);\n  \n  // Handler for Twitter login with pre-generated Solana wallet\n  const handleSignInWithTwitter = async () => {\n    if (ready) {\n      try {\n        // Login specifically with Twitter\n        await login({\n          provider: \"twitter\",\n        });\n      } catch (error) {\n        console.error(\"Error signing in with Twitter:\", error);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.signInContainer}>\n      <header className={styles.header}>\n        <h1 className={styles.logo}>BANKR ON SOL</h1>\n      </header>\n\n      <div className={styles.disclaimer}>\n        Bankr On SOL is currently in alpha and may occasionally make mistakes.\n        Use at your own risk. At this stage, Bankr ON SOL supports only Solana.\n      </div>\n\n      <main className={styles.main}>\n        <div className={styles.signInBox}>\n          <button\n            className={styles.signInButton}\n            onClick={handleSignInWithTwitter}\n            disabled={!ready}\n          >\n            Sign in with Twitter\n          </button>\n          <p className={styles.signInInfo}>\n            A Solana wallet will be automatically created for you\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAEe,SAAS;;IACtB,MAAM,EACJ,KAAK,EACL,KAAK,EACL,IAAI,EACJ,aAAa,EACd,GAAG,CAAA,GAAA,0aAAA,CAAA,WAAQ,AAAD;IAEX,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,kbAAA,CAAA,mBAAgB,AAAD,EAAE;QACxC,SAAS;uCAAE,CAAC,EAAE,MAAM,EAAE;gBACpB,QAAQ,GAAG,CAAC,uCAAuC;YACrD;;QACA,OAAO;uCAAE,CAAC;gBACR,QAAQ,KAAK,CAAC,iCAAiC;YACjD;;IACF;IAEA,yDAAyD;IACzD,CAAA,GAAA,+TAAA,CAAA,YAAS,AAAD;4BAAE;YACR,MAAM;+DAA6B;oBACjC,IAAI,iBAAiB,MAAM;wBACzB,IAAI;4BACF,4CAA4C;4BAC5C,MAAM,kBAAkB,KAAK,cAAc,CAAC,IAAI;+FAC9C,CAAA,UAAW,QAAQ,IAAI,KAAK,YAAY,QAAQ,gBAAgB,KAAK;;4BAGvE,qBAAqB;4BACrB,IAAI,CAAC,iBAAiB;gCACpB,QAAQ,GAAG,CAAC;gCACZ,MAAM;4BACR;wBACF,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,iCAAiC;wBACjD;oBACF;gBACF;;YAEA;QACF;2BAAG;QAAC;QAAe;QAAM;KAAa;IAEtC,6DAA6D;IAC7D,MAAM,0BAA0B;QAC9B,IAAI,OAAO;YACT,IAAI;gBACF,kCAAkC;gBAClC,MAAM,MAAM;oBACV,UAAU;gBACZ;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,kCAAkC;YAClD;QACF;IACF;IAEA,qBACE,+VAAC;QAAI,WAAW,0IAAA,CAAA,UAAM,CAAC,eAAe;;0BACpC,+VAAC;gBAAO,WAAW,0IAAA,CAAA,UAAM,CAAC,MAAM;0BAC9B,cAAA,+VAAC;oBAAG,WAAW,0IAAA,CAAA,UAAM,CAAC,IAAI;8BAAE;;;;;;;;;;;0BAG9B,+VAAC;gBAAI,WAAW,0IAAA,CAAA,UAAM,CAAC,UAAU;0BAAE;;;;;;0BAKnC,+VAAC;gBAAK,WAAW,0IAAA,CAAA,UAAM,CAAC,IAAI;0BAC1B,cAAA,+VAAC;oBAAI,WAAW,0IAAA,CAAA,UAAM,CAAC,SAAS;;sCAC9B,+VAAC;4BACC,WAAW,0IAAA,CAAA,UAAM,CAAC,YAAY;4BAC9B,SAAS;4BACT,UAAU,CAAC;sCACZ;;;;;;sCAGD,+VAAC;4BAAE,WAAW,0IAAA,CAAA,UAAM,CAAC,UAAU;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAO3C;GAlFwB;;QAMlB,0aAAA,CAAA,WAAQ;QAEa,kbAAA,CAAA,mBAAgB;;;KARnB","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ProfileModal.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"accountAddress\": \"ProfileModal-module__0CK3oa__accountAddress\",\n  \"accountInfo\": \"ProfileModal-module__0CK3oa__accountInfo\",\n  \"accountTitle\": \"ProfileModal-module__0CK3oa__accountTitle\",\n  \"benefit\": \"ProfileModal-module__0CK3oa__benefit\",\n  \"benefitsList\": \"ProfileModal-module__0CK3oa__benefitsList\",\n  \"checkmark\": \"ProfileModal-module__0CK3oa__checkmark\",\n  \"closeButton\": \"ProfileModal-module__0CK3oa__closeButton\",\n  \"emailIcon\": \"ProfileModal-module__0CK3oa__emailIcon\",\n  \"logoutButton\": \"ProfileModal-module__0CK3oa__logoutButton\",\n  \"logoutIcon\": \"ProfileModal-module__0CK3oa__logoutIcon\",\n  \"membershipButton\": \"ProfileModal-module__0CK3oa__membershipButton\",\n  \"membershipSection\": \"ProfileModal-module__0CK3oa__membershipSection\",\n  \"membershipTitle\": \"ProfileModal-module__0CK3oa__membershipTitle\",\n  \"modal\": \"ProfileModal-module__0CK3oa__modal\",\n  \"modalHeader\": \"ProfileModal-module__0CK3oa__modalHeader\",\n  \"modalOverlay\": \"ProfileModal-module__0CK3oa__modalOverlay\",\n  \"paymentInfo\": \"ProfileModal-module__0CK3oa__paymentInfo\",\n  \"period\": \"ProfileModal-module__0CK3oa__period\",\n  \"price\": \"ProfileModal-module__0CK3oa__price\",\n  \"priceLabel\": \"ProfileModal-module__0CK3oa__priceLabel\",\n  \"pricingInfo\": \"ProfileModal-module__0CK3oa__pricingInfo\",\n  \"recoverySection\": \"ProfileModal-module__0CK3oa__recoverySection\",\n  \"recoveryTitle\": \"ProfileModal-module__0CK3oa__recoveryTitle\",\n  \"setEmailButton\": \"ProfileModal-module__0CK3oa__setEmailButton\",\n  \"twitterUsername\": \"ProfileModal-module__0CK3oa__twitterUsername\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/components/ProfileModal.tsx"],"sourcesContent":["\"use client\";\n\nimport { usePrivy } from \"@privy-io/react-auth\";\nimport styles from \"./ProfileModal.module.css\";\n\ninterface ProfileModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function ProfileModal({ isOpen, onClose }: ProfileModalProps) {\n  const { user, logout } = usePrivy();\n\n  // Find the Twitter account from linked accounts\n  const twitterAccount = user?.linkedAccounts?.find(\n    (account) => account.type === \"twitter_oauth\"\n  );\n\n  // Get Twitter username if available\n  const twitterUsername = twitterAccount?.username || \"Unknown\";\n\n  if (!isOpen) return null;\n\n  return (\n    <div className={styles.modalOverlay}>\n      <div className={styles.modal}>\n        <div className={styles.modalHeader}>\n          <button className={styles.closeButton} onClick={onClose}>\n            ×\n          </button>\n        </div>\n\n        <div className={styles.accountInfo}>\n          <p className={styles.accountTitle}>\n            You are logged in with your X account\n          </p>\n          <p className={styles.twitterUsername}>@{twitterUsername}</p>\n          <button className={styles.logoutButton} onClick={logout}>\n            Log Out <span className={styles.logoutIcon}>↗</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAUe,SAAS,aAAa,EAAE,MAAM,EAAE,OAAO,EAAqB;;IACzE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,0aAAA,CAAA,WAAQ,AAAD;IAEhC,gDAAgD;IAChD,MAAM,iBAAiB,MAAM,gBAAgB,KAC3C,CAAC,UAAY,QAAQ,IAAI,KAAK;IAGhC,oCAAoC;IACpC,MAAM,kBAAkB,gBAAgB,YAAY;IAEpD,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,+VAAC;QAAI,WAAW,gJAAA,CAAA,UAAM,CAAC,YAAY;kBACjC,cAAA,+VAAC;YAAI,WAAW,gJAAA,CAAA,UAAM,CAAC,KAAK;;8BAC1B,+VAAC;oBAAI,WAAW,gJAAA,CAAA,UAAM,CAAC,WAAW;8BAChC,cAAA,+VAAC;wBAAO,WAAW,gJAAA,CAAA,UAAM,CAAC,WAAW;wBAAE,SAAS;kCAAS;;;;;;;;;;;8BAK3D,+VAAC;oBAAI,WAAW,gJAAA,CAAA,UAAM,CAAC,WAAW;;sCAChC,+VAAC;4BAAE,WAAW,gJAAA,CAAA,UAAM,CAAC,YAAY;sCAAE;;;;;;sCAGnC,+VAAC;4BAAE,WAAW,gJAAA,CAAA,UAAM,CAAC,eAAe;;gCAAE;gCAAE;;;;;;;sCACxC,+VAAC;4BAAO,WAAW,gJAAA,CAAA,UAAM,CAAC,YAAY;4BAAE,SAAS;;gCAAQ;8CAC/C,+VAAC;oCAAK,WAAW,gJAAA,CAAA,UAAM,CAAC,UAAU;8CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxD;GAlCwB;;QACG,0aAAA,CAAA,WAAQ;;;KADX","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/WalletSection.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"assetsLabel\": \"WalletSection-module__tnmAMa__assetsLabel\",\n  \"baseIcon\": \"WalletSection-module__tnmAMa__baseIcon\",\n  \"copyBtn\": \"WalletSection-module__tnmAMa__copyBtn\",\n  \"ethAmount\": \"WalletSection-module__tnmAMa__ethAmount\",\n  \"ethBalance\": \"WalletSection-module__tnmAMa__ethBalance\",\n  \"ethIcon\": \"WalletSection-module__tnmAMa__ethIcon\",\n  \"ethValue\": \"WalletSection-module__tnmAMa__ethValue\",\n  \"tradingWallet\": \"WalletSection-module__tnmAMa__tradingWallet\",\n  \"walletAddress\": \"WalletSection-module__tnmAMa__walletAddress\",\n  \"walletBalance\": \"WalletSection-module__tnmAMa__walletBalance\",\n  \"walletInfo\": \"WalletSection-module__tnmAMa__walletInfo\",\n  \"walletProvider\": \"WalletSection-module__tnmAMa__walletProvider\",\n  \"walletSection\": \"WalletSection-module__tnmAMa__walletSection\",\n  \"walletTitle\": \"WalletSection-module__tnmAMa__walletTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/components/WalletSection.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { usePrivy } from \"@privy-io/react-auth\";\nimport { useSolanaWallets } from \"@privy-io/react-auth/solana\";\nimport styles from \"./WalletSection.module.css\";\nimport Image from \"next/image\";\nimport { FiCopy } from \"react-icons/fi\";\nimport { Connection, LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\n\nexport default function WalletSection() {\n  const { authenticated, user } = usePrivy();\n  const { wallets: privySolanaWallets, createWallet } = useSolanaWallets();\n  const [solanaAddress, setSolanaAddress] = useState<string | null>(null);\n  const [solBalance, setSolBalance] = useState<number | null>(null);\n\n  // Get the Privy-generated Solana wallet address\n  useEffect(() => {\n    const getSolanaWallet = async () => {\n      if (authenticated && user) {\n        try {\n          // Check if user has any Solana wallets through Privy\n          if (privySolanaWallets && privySolanaWallets.length > 0) {\n            const solanaWallet = privySolanaWallets[0];\n            console.log(\"Found Privy Solana wallet:\", solanaWallet);\n            setSolanaAddress(solanaWallet.address);\n          } else {\n            console.log(\n              \"No Privy Solana wallet found, checking linked accounts...\"\n            );\n          }\n        } catch (error) {\n          console.error(\"Error getting Solana wallet:\", error);\n        }\n      }\n    };\n\n    getSolanaWallet();\n  }, [authenticated, user, privySolanaWallets, createWallet]);\n\n  // Fetch SOL balance when solanaAddress is available\n  useEffect(() => {\n    const fetchSolBalance = async () => {\n      if (solanaAddress) {\n        try {\n          // Connect to Solana devnet or mainnet as needed\n          const connection = new Connection(\n            \"https://api.mainnet-beta.solana.com\",\n            \"confirmed\"\n          );\n          const publicKey = new PublicKey(solanaAddress);\n          const balance = await connection.getBalance(publicKey);\n          // Convert lamports to SOL\n          const solBalance = balance / LAMPORTS_PER_SOL;\n          setSolBalance(solBalance);\n          console.log(\"SOL Balance:\", solBalance);\n        } catch (error) {\n          console.error(\"Error fetching SOL balance:\", error);\n          setSolBalance(null);\n        }\n      }\n    };\n\n    fetchSolBalance();\n  }, [solanaAddress]);\n\n  return (\n    <div className={styles.walletSection}>\n      <h2 className={styles.walletTitle}>Wallet</h2>\n      <div className={styles.walletInfo}>\n        <div className={styles.walletProvider}>\n          <div className={styles.baseIcon}>\n            <Image\n              src=\"/solanaLogoMark.svg\"\n              alt=\"Solana Logo\"\n              width={14}\n              height={14}\n            />\n          </div>{\" \"}\n          Solana\n          <span className={styles.walletBalance}>--</span>\n        </div>\n        <div className={styles.tradingWallet}>\n          Address:\n          <span className={styles.walletAddress}>\n            {solanaAddress\n              ? `${solanaAddress.slice(0, 4)}...${solanaAddress.slice(-6)}`\n              : \"Loading...\"}\n          </span>\n          <button\n            className={styles.copyBtn}\n            onClick={() => {\n              if (solanaAddress) {\n                navigator.clipboard.writeText(solanaAddress);\n                alert(\"Address copied to clipboard!\");\n              }\n            }}\n            disabled={!solanaAddress}\n          >\n            <FiCopy />\n          </button>\n        </div>\n        <div className={styles.ethBalance}>\n          <span className={styles.ethIcon}>↑ SOL:</span>\n          <span className={styles.ethAmount}>\n            {solBalance !== null ? solBalance.toFixed(4) : \"--\"}\n          </span>\n          <span className={styles.ethValue}>\n            {solBalance !== null ? `$${(solBalance * 0).toFixed(2)}` : \"--\"}\n          </span>\n        </div>\n        <div className={styles.assetsLabel}>Assets</div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUe,SAAS;;IACtB,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,0aAAA,CAAA,WAAQ,AAAD;IACvC,MAAM,EAAE,SAAS,kBAAkB,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,kbAAA,CAAA,mBAAgB,AAAD;IACrE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,+TAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,+TAAA,CAAA,WAAQ,AAAD,EAAiB;IAE5D,gDAAgD;IAChD,CAAA,GAAA,+TAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM;2DAAkB;oBACtB,IAAI,iBAAiB,MAAM;wBACzB,IAAI;4BACF,qDAAqD;4BACrD,IAAI,sBAAsB,mBAAmB,MAAM,GAAG,GAAG;gCACvD,MAAM,eAAe,kBAAkB,CAAC,EAAE;gCAC1C,QAAQ,GAAG,CAAC,8BAA8B;gCAC1C,iBAAiB,aAAa,OAAO;4BACvC,OAAO;gCACL,QAAQ,GAAG,CACT;4BAEJ;wBACF,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,gCAAgC;wBAChD;oBACF;gBACF;;YAEA;QACF;kCAAG;QAAC;QAAe;QAAM;QAAoB;KAAa;IAE1D,oDAAoD;IACpD,CAAA,GAAA,+TAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM;2DAAkB;oBACtB,IAAI,eAAe;wBACjB,IAAI;4BACF,gDAAgD;4BAChD,MAAM,aAAa,IAAI,uUAAA,CAAA,aAAU,CAC/B,uCACA;4BAEF,MAAM,YAAY,IAAI,uUAAA,CAAA,YAAS,CAAC;4BAChC,MAAM,UAAU,MAAM,WAAW,UAAU,CAAC;4BAC5C,0BAA0B;4BAC1B,MAAM,aAAa,UAAU,uUAAA,CAAA,mBAAgB;4BAC7C,cAAc;4BACd,QAAQ,GAAG,CAAC,gBAAgB;wBAC9B,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,+BAA+B;4BAC7C,cAAc;wBAChB;oBACF;gBACF;;YAEA;QACF;kCAAG;QAAC;KAAc;IAElB,qBACE,+VAAC;QAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,aAAa;;0BAClC,+VAAC;gBAAG,WAAW,iJAAA,CAAA,UAAM,CAAC,WAAW;0BAAE;;;;;;0BACnC,+VAAC;gBAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,UAAU;;kCAC/B,+VAAC;wBAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,cAAc;;0CACnC,+VAAC;gCAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,QAAQ;0CAC7B,cAAA,+VAAC,kSAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;;;;;;;;;;;4BAEL;4BAAI;0CAEX,+VAAC;gCAAK,WAAW,iJAAA,CAAA,UAAM,CAAC,aAAa;0CAAE;;;;;;;;;;;;kCAEzC,+VAAC;wBAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,aAAa;;4BAAE;0CAEpC,+VAAC;gCAAK,WAAW,iJAAA,CAAA,UAAM,CAAC,aAAa;0CAClC,gBACG,GAAG,cAAc,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,cAAc,KAAK,CAAC,CAAC,IAAI,GAC3D;;;;;;0CAEN,+VAAC;gCACC,WAAW,iJAAA,CAAA,UAAM,CAAC,OAAO;gCACzB,SAAS;oCACP,IAAI,eAAe;wCACjB,UAAU,SAAS,CAAC,SAAS,CAAC;wCAC9B,MAAM;oCACR;gCACF;gCACA,UAAU,CAAC;0CAEX,cAAA,+VAAC,kOAAA,CAAA,SAAM;;;;;;;;;;;;;;;;kCAGX,+VAAC;wBAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,UAAU;;0CAC/B,+VAAC;gCAAK,WAAW,iJAAA,CAAA,UAAM,CAAC,OAAO;0CAAE;;;;;;0CACjC,+VAAC;gCAAK,WAAW,iJAAA,CAAA,UAAM,CAAC,SAAS;0CAC9B,eAAe,OAAO,WAAW,OAAO,CAAC,KAAK;;;;;;0CAEjD,+VAAC;gCAAK,WAAW,iJAAA,CAAA,UAAM,CAAC,QAAQ;0CAC7B,eAAe,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,OAAO,CAAC,IAAI,GAAG;;;;;;;;;;;;kCAG/D,+VAAC;wBAAI,WAAW,iJAAA,CAAA,UAAM,CAAC,WAAW;kCAAE;;;;;;;;;;;;;;;;;;AAI5C;GAzGwB;;QACU,0aAAA,CAAA,WAAQ;QACc,kbAAA,CAAA,mBAAgB;;;KAFhD","debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { usePrivy } from \"@privy-io/react-auth\";\nimport styles from \"./page.module.css\";\nimport SignIn from \"../components/SignIn\";\nimport ProfileModal from \"../components/ProfileModal\";\nimport WalletSection from \"../components/WalletSection\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\n\nexport default function Home() {\n  const { ready, authenticated } = usePrivy();\n  const [isProfileModalOpen, setIsProfileModalOpen] = useState(false);\n\n  // If not ready yet, could show a loading state\n  if (!ready) {\n    return <div>Loading...</div>;\n  }\n\n  // If not signed in, show the sign-in page\n  if (!authenticated) {\n    return <SignIn />;\n  }\n\n  // Otherwise, show the dashboard\n  return (\n    <div className={styles.page}>\n      <header className={styles.header}>\n        <div className={styles.headerLeft}>\n          <h1 className={styles.logo}>BANKR ON SOL</h1>\n        </div>\n        <div className={styles.headerRight}>\n          <WalletMultiButton className={styles.walletModeBtn} />\n          <button\n            className={styles.profileBtn}\n            onClick={() => setIsProfileModalOpen(true)}\n          >\n            👤\n          </button>\n        </div>\n      </header>\n\n      <div className={styles.disclaimer}>\n        Bankr On SOL is currently in alpha and may occasionally make mistakes.\n        Use at your own risk. At this stage, Bankr supports only Solana.\n      </div>\n\n      <main className={styles.main}>\n        <div className={styles.activitySection}>\n          <h2 className={styles.sectionTitle}>Activity</h2>\n          <div className={styles.transaction}>\n            <div className={styles.transactionDetails}>\n              <span className={styles.arrow}>▶</span>\n              Transfer TOBY to\n              <div className={styles.address}>\n                0x4e902e01d78300b0ba876562e99e66e929715e\n              </div>\n            </div>\n            <button className={styles.checkBtn}>✓</button>\n          </div>\n        </div>\n\n        <div className={styles.chatSection}>\n          <div className={styles.chatArea}>\n            <div className={styles.chatPlaceholder}>\n              {/* Welcome! What do you want to do? */}\n            </div>\n          </div>\n          <div className={styles.messageCounter}>\n            0 / 10 free daily messages used\n            <div className={styles.usageBar}>\n              <div className={styles.usageProgress} style={{ width: \"0%\" }}>\n                0.00%\n              </div>\n            </div>\n          </div>\n          <div className={styles.chatFooter}>\n            Enjoy Bankr without limits\n            <button className={styles.joinClubBtn}>Join Bankr Club</button>\n          </div>\n        </div>\n\n        <WalletSection />\n      </main>\n\n      <ProfileModal\n        isOpen={isProfileModalOpen}\n        onClose={() => setIsProfileModalOpen(false)}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUe,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,0aAAA,CAAA,WAAQ,AAAD;IACxC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,+TAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,+CAA+C;IAC/C,IAAI,CAAC,OAAO;QACV,qBAAO,+VAAC;sBAAI;;;;;;IACd;IAEA,0CAA0C;IAC1C,IAAI,CAAC,eAAe;QAClB,qBAAO,+VAAC,+HAAA,CAAA,UAAM;;;;;IAChB;IAEA,gCAAgC;IAChC,qBACE,+VAAC;QAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,IAAI;;0BACzB,+VAAC;gBAAO,WAAW,iIAAA,CAAA,UAAM,CAAC,MAAM;;kCAC9B,+VAAC;wBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,UAAU;kCAC/B,cAAA,+VAAC;4BAAG,WAAW,iIAAA,CAAA,UAAM,CAAC,IAAI;sCAAE;;;;;;;;;;;kCAE9B,+VAAC;wBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,+VAAC,yYAAA,CAAA,oBAAiB;gCAAC,WAAW,iIAAA,CAAA,UAAM,CAAC,aAAa;;;;;;0CAClD,+VAAC;gCACC,WAAW,iIAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,SAAS,IAAM,sBAAsB;0CACtC;;;;;;;;;;;;;;;;;;0BAML,+VAAC;gBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,UAAU;0BAAE;;;;;;0BAKnC,+VAAC;gBAAK,WAAW,iIAAA,CAAA,UAAM,CAAC,IAAI;;kCAC1B,+VAAC;wBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,eAAe;;0CACpC,+VAAC;gCAAG,WAAW,iIAAA,CAAA,UAAM,CAAC,YAAY;0CAAE;;;;;;0CACpC,+VAAC;gCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,WAAW;;kDAChC,+VAAC;wCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,kBAAkB;;0DACvC,+VAAC;gDAAK,WAAW,iIAAA,CAAA,UAAM,CAAC,KAAK;0DAAE;;;;;;4CAAQ;0DAEvC,+VAAC;gDAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,OAAO;0DAAE;;;;;;;;;;;;kDAIlC,+VAAC;wCAAO,WAAW,iIAAA,CAAA,UAAM,CAAC,QAAQ;kDAAE;;;;;;;;;;;;;;;;;;kCAIxC,+VAAC;wBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,+VAAC;gCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,QAAQ;0CAC7B,cAAA,+VAAC;oCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,eAAe;;;;;;;;;;;0CAIxC,+VAAC;gCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,cAAc;;oCAAE;kDAErC,+VAAC;wCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,QAAQ;kDAC7B,cAAA,+VAAC;4CAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,aAAa;4CAAE,OAAO;gDAAE,OAAO;4CAAK;sDAAG;;;;;;;;;;;;;;;;;0CAKlE,+VAAC;gCAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,UAAU;;oCAAE;kDAEjC,+VAAC;wCAAO,WAAW,iIAAA,CAAA,UAAM,CAAC,WAAW;kDAAE;;;;;;;;;;;;;;;;;;kCAI3C,+VAAC,sIAAA,CAAA,UAAa;;;;;;;;;;;0BAGhB,+VAAC,qIAAA,CAAA,UAAY;gBACX,QAAQ;gBACR,SAAS,IAAM,sBAAsB;;;;;;;;;;;;AAI7C;GAjFwB;;QACW,0aAAA,CAAA,WAAQ;;;KADnB","debugId":null}}]
}