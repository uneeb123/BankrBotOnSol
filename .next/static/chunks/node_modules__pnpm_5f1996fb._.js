(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules__pnpm_5f1996fb._.js", {

"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataItem = void 0;
class DataItem {
    constructor(data, tag){
        this.setTag = (tag)=>{
            this.tag = tag;
        };
        this.clearTag = ()=>{
            this.tag = undefined;
        };
        this.getTag = ()=>{
            return this.tag;
        };
        this.getData = ()=>{
            return this.data;
        };
        this.data = data;
        this.tag = tag;
    }
}
exports.DataItem = DataItem; //# sourceMappingURL=DataItem.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/cbor-sync.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
(function(global, factory) {
    if (typeof define === 'function' && define.amd) {
        ((r)=>r !== undefined && __turbopack_context__.v(r))(factory());
    } else if (("TURBOPACK compile-time value", "object") !== 'undefined' && module.exports) {
        module.exports = factory();
    } else {
        global.CBOR = factory();
    }
})(this, function() {
    const { DataItem } = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)");
    var CBOR = function() {
        function BinaryHex(hex) {
            this.$hex = hex;
        }
        BinaryHex.prototype = {
            length: function() {
                return this.$hex.length / 2;
            },
            toString: function(format) {
                if (!format || format === 'hex' || format === 16) return this.$hex;
                if (format === 'utf-8') {
                    var encoded = '';
                    for(var i = 0; i < this.$hex.length; i += 2){
                        encoded += '%' + this.$hex.substring(i, i + 2);
                    }
                    return decodeURIComponent(encoded);
                }
                if (format === 'latin') {
                    var encoded = [];
                    for(var i = 0; i < this.$hex.length; i += 2){
                        encoded.push(parseInt(this.$hex.substring(i, i + 2), 16));
                    }
                    return String.fromCharCode.apply(String, encoded);
                }
                throw new Error('Unrecognised format: ' + format);
            }
        };
        BinaryHex.fromLatinString = function(latinString) {
            var hex = '';
            for(var i = 0; i < latinString.length; i++){
                var pair = latinString.charCodeAt(i).toString(16);
                if (pair.length === 1) pair = '0' + pair;
                hex += pair;
            }
            return new BinaryHex(hex);
        };
        BinaryHex.fromUtf8String = function(utf8String) {
            var encoded = encodeURIComponent(utf8String);
            var hex = '';
            for(var i = 0; i < encoded.length; i++){
                if (encoded.charAt(i) === '%') {
                    hex += encoded.substring(i + 1, i + 3);
                    i += 2;
                } else {
                    var hexPair = encoded.charCodeAt(i).toString(16);
                    if (hexPair.length < 2) hexPair = '0' + hexPair;
                    hex += hexPair;
                }
            }
            return new BinaryHex(hex);
        };
        var semanticEncoders = [];
        var semanticDecoders = {};
        var notImplemented = function(label) {
            return function() {
                throw new Error(label + ' not implemented');
            };
        };
        function Reader() {}
        Reader.prototype = {
            peekByte: notImplemented('peekByte'),
            readByte: notImplemented('readByte'),
            readChunk: notImplemented('readChunk'),
            readFloat16: function() {
                var half = this.readUint16();
                var exponent = (half & 0x7fff) >> 10;
                var mantissa = half & 0x3ff;
                var negative = half & 0x8000;
                if (exponent === 0x1f) {
                    if (mantissa === 0) {
                        return negative ? -Infinity : Infinity;
                    }
                    return NaN;
                }
                var magnitude = exponent ? Math.pow(2, exponent - 25) * (1024 + mantissa) : Math.pow(2, -24) * mantissa;
                return negative ? -magnitude : magnitude;
            },
            readFloat32: function() {
                var intValue = this.readUint32();
                var exponent = (intValue & 0x7fffffff) >> 23;
                var mantissa = intValue & 0x7fffff;
                var negative = intValue & 0x80000000;
                if (exponent === 0xff) {
                    if (mantissa === 0) {
                        return negative ? -Infinity : Infinity;
                    }
                    return NaN;
                }
                var magnitude = exponent ? Math.pow(2, exponent - 23 - 127) * (8388608 + mantissa) : Math.pow(2, -23 - 126) * mantissa;
                return negative ? -magnitude : magnitude;
            },
            readFloat64: function() {
                var int1 = this.readUint32(), int2 = this.readUint32();
                var exponent = int1 >> 20 & 0x7ff;
                var mantissa = (int1 & 0xfffff) * 4294967296 + int2;
                var negative = int1 & 0x80000000;
                if (exponent === 0x7ff) {
                    if (mantissa === 0) {
                        return negative ? -Infinity : Infinity;
                    }
                    return NaN;
                }
                var magnitude = exponent ? Math.pow(2, exponent - 52 - 1023) * (4503599627370496 + mantissa) : Math.pow(2, -52 - 1022) * mantissa;
                return negative ? -magnitude : magnitude;
            },
            readUint16: function() {
                return this.readByte() * 256 + this.readByte();
            },
            readUint32: function() {
                return this.readUint16() * 65536 + this.readUint16();
            },
            readUint64: function() {
                return this.readUint32() * 4294967296 + this.readUint32();
            }
        };
        function Writer() {}
        Writer.prototype = {
            writeByte: notImplemented('writeByte'),
            result: notImplemented('result'),
            writeFloat16: notImplemented('writeFloat16'),
            writeFloat32: notImplemented('writeFloat32'),
            writeFloat64: notImplemented('writeFloat64'),
            writeUint16: function(value) {
                this.writeByte(value >> 8 & 0xff);
                this.writeByte(value & 0xff);
            },
            writeUint32: function(value) {
                this.writeUint16(value >> 16 & 0xffff);
                this.writeUint16(value & 0xffff);
            },
            writeUint64: function(value) {
                if (value >= 9007199254740992 || value <= -9007199254740992) {
                    throw new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');
                }
                this.writeUint32(Math.floor(value / 4294967296));
                this.writeUint32(value % 4294967296);
            },
            writeString: notImplemented('writeString'),
            canWriteBinary: function(chunk) {
                return false;
            },
            writeBinary: notImplemented('writeChunk')
        };
        function readHeaderRaw(reader) {
            var firstByte = reader.readByte();
            var majorType = firstByte >> 5, value = firstByte & 0x1f;
            return {
                type: majorType,
                value: value
            };
        }
        function valueFromHeader(header, reader) {
            var value = header.value;
            if (value < 24) {
                return value;
            } else if (value == 24) {
                return reader.readByte();
            } else if (value == 25) {
                return reader.readUint16();
            } else if (value == 26) {
                return reader.readUint32();
            } else if (value == 27) {
                return reader.readUint64();
            } else if (value == 31) {
                return null;
            }
            notImplemented('Additional info: ' + value)();
        }
        function writeHeaderRaw(type, value, writer) {
            writer.writeByte(type << 5 | value);
        }
        function writeHeader(type, value, writer) {
            var firstByte = type << 5;
            if (value < 24) {
                writer.writeByte(firstByte | value);
            } else if (value < 256) {
                writer.writeByte(firstByte | 24);
                writer.writeByte(value);
            } else if (value < 65536) {
                writer.writeByte(firstByte | 25);
                writer.writeUint16(value);
            } else if (value < 4294967296) {
                writer.writeByte(firstByte | 26);
                writer.writeUint32(value);
            } else {
                writer.writeByte(firstByte | 27);
                writer.writeUint64(value);
            }
        }
        var stopCode = new Error();
        function decodeReader(reader) {
            var header = readHeaderRaw(reader);
            switch(header.type){
                case 0:
                    return valueFromHeader(header, reader);
                case 1:
                    return -1 - valueFromHeader(header, reader);
                case 2:
                    return reader.readChunk(valueFromHeader(header, reader));
                case 3:
                    var buffer = reader.readChunk(valueFromHeader(header, reader));
                    return buffer.toString('utf-8');
                case 4:
                case 5:
                    var arrayLength = valueFromHeader(header, reader);
                    var result = [];
                    if (arrayLength !== null) {
                        if (header.type === 5) {
                            arrayLength *= 2;
                        }
                        for(var i = 0; i < arrayLength; i++){
                            result[i] = decodeReader(reader);
                        }
                    } else {
                        var item;
                        while((item = decodeReader(reader)) !== stopCode){
                            result.push(item);
                        }
                    }
                    if (header.type === 5) {
                        var objResult = {};
                        for(var i = 0; i < result.length; i += 2){
                            objResult[result[i]] = result[i + 1];
                        }
                        return objResult;
                    } else {
                        return result;
                    }
                case 6:
                    var tag = valueFromHeader(header, reader);
                    var decoder = semanticDecoders[tag];
                    var result = decodeReader(reader);
                    return decoder ? decoder(result) : result;
                case 7:
                    if (header.value === 25) {
                        return reader.readFloat16();
                    } else if (header.value === 26) {
                        return reader.readFloat32();
                    } else if (header.value === 27) {
                        return reader.readFloat64();
                    }
                    switch(valueFromHeader(header, reader)){
                        case 20:
                            return false;
                        case 21:
                            return true;
                        case 22:
                            return null;
                        case 23:
                            return undefined;
                        case null:
                            return stopCode;
                        default:
                            throw new Error('Unknown fixed value: ' + header.value);
                    }
                default:
                    throw new Error('Unsupported header: ' + JSON.stringify(header));
            }
            throw new Error('not implemented yet');
        }
        function encodeWriter(data, writer) {
            for(var i = 0; i < semanticEncoders.length; i++){
                var replacement = semanticEncoders[i].fn(data);
                if (replacement !== undefined) {
                    writeHeader(6, semanticEncoders[i].tag, writer);
                    return encodeWriter(replacement, writer);
                }
            }
            if (data && typeof data.toCBOR === 'function') {
                data = data.toCBOR();
            }
            if (data === false) {
                writeHeader(7, 20, writer);
            } else if (data === true) {
                writeHeader(7, 21, writer);
            } else if (data === null) {
                writeHeader(7, 22, writer);
            } else if (data === undefined) {
                writeHeader(7, 23, writer);
            } else if (typeof data === 'number') {
                if (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {
                    if (data < 0) {
                        writeHeader(1, -1 - data, writer);
                    } else {
                        writeHeader(0, data, writer);
                    }
                } else {
                    writeHeaderRaw(7, 27, writer);
                    writer.writeFloat64(data);
                }
            } else if (typeof data === 'string') {
                writer.writeString(data, function(length) {
                    writeHeader(3, length, writer);
                });
            } else if (writer.canWriteBinary(data)) {
                writer.writeBinary(data, function(length) {
                    writeHeader(2, length, writer);
                });
            } else if (typeof data === 'object') {
                if (api.config.useToJSON && typeof data.toJSON === 'function') {
                    data = data.toJSON();
                }
                if (Array.isArray(data)) {
                    writeHeader(4, data.length, writer);
                    for(var i = 0; i < data.length; i++){
                        encodeWriter(data[i], writer);
                    }
                } else {
                    var keys = Object.keys(data);
                    writeHeader(5, keys.length, writer);
                    for(var i = 0; i < keys.length; i++){
                        const number = parseInt(keys[i]);
                        if (isNaN(number)) {
                            encodeWriter(keys[i], writer);
                            encodeWriter(data[keys[i]], writer);
                        } else {
                            encodeWriter(number, writer);
                            encodeWriter(data[keys[i]], writer);
                        }
                    }
                }
            } else {
                throw new Error('CBOR encoding not supported: ' + data);
            }
        }
        var readerFunctions = [];
        var writerFunctions = [];
        var api = {
            config: {
                useToJSON: true
            },
            addWriter: function(format, writerFunction) {
                if (typeof format === 'string') {
                    writerFunctions.push(function(f) {
                        if (format === f) return writerFunction(f);
                    });
                } else {
                    writerFunctions.push(format);
                }
            },
            addReader: function(format, readerFunction) {
                if (typeof format === 'string') {
                    readerFunctions.push(function(data, f) {
                        if (format === f) return readerFunction(data, f);
                    });
                } else {
                    readerFunctions.push(format);
                }
            },
            encode: function(data, format) {
                for(var i = 0; i < writerFunctions.length; i++){
                    var func = writerFunctions[i];
                    var writer = func(format);
                    if (writer) {
                        encodeWriter(data, writer);
                        return writer.result();
                    }
                }
                throw new Error('Unsupported output format: ' + format);
            },
            encodeDataItem: function(data, format) {
                for(var i = 0; i < writerFunctions.length; i++){
                    var func = writerFunctions[i];
                    var writer = func(format);
                    if (writer) {
                        if (data.getTag() !== undefined) {
                            encodeWriter(data, writer);
                            return writer.result();
                        } else {
                            encodeWriter(data.getData(), writer);
                            return writer.result();
                        }
                    }
                }
                throw new Error('Unsupported output format: ' + format);
            },
            decode: function(data, format) {
                for(var i = 0; i < readerFunctions.length; i++){
                    var func = readerFunctions[i];
                    var reader = func(data, format);
                    if (reader) {
                        return decodeReader(reader);
                    }
                }
                throw new Error('Unsupported input format: ' + format);
            },
            decodeToDataItem: function(data, format) {
                for(var i = 0; i < readerFunctions.length; i++){
                    var func = readerFunctions[i];
                    var reader = func(data, format);
                    if (reader) {
                        const result = decodeReader(reader);
                        if (result instanceof DataItem) {
                            return result;
                        } else {
                            return new DataItem(result);
                        }
                    }
                }
                throw new Error('Unsupported input format: ' + format);
            },
            addSemanticEncode: function(tag, fn) {
                if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {
                    throw new Error('Tag must be a positive integer');
                }
                semanticEncoders.push({
                    tag: tag,
                    fn: fn
                });
                return this;
            },
            addSemanticDecode: function(tag, fn) {
                if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {
                    throw new Error('Tag must be a positive integer');
                }
                semanticDecoders[tag] = fn;
                return this;
            }
        };
        function BufferReader(buffer) {
            this.buffer = buffer;
            this.pos = 0;
        }
        BufferReader.prototype = Object.create(Reader.prototype);
        BufferReader.prototype.peekByte = function() {
            return this.buffer[this.pos];
        };
        BufferReader.prototype.readByte = function() {
            return this.buffer[this.pos++];
        };
        BufferReader.prototype.readUint16 = function() {
            var result = this.buffer.readUInt16BE(this.pos);
            this.pos += 2;
            return result;
        };
        BufferReader.prototype.readUint32 = function() {
            var result = this.buffer.readUInt32BE(this.pos);
            this.pos += 4;
            return result;
        };
        BufferReader.prototype.readFloat32 = function() {
            var result = this.buffer.readFloatBE(this.pos);
            this.pos += 4;
            return result;
        };
        BufferReader.prototype.readFloat64 = function() {
            var result = this.buffer.readDoubleBE(this.pos);
            this.pos += 8;
            return result;
        };
        BufferReader.prototype.readChunk = function(length) {
            var result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(length);
            this.buffer.copy(result, 0, this.pos, this.pos += length);
            return result;
        };
        function BufferWriter(stringFormat) {
            this.byteLength = 0;
            this.defaultBufferLength = 16384;
            this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
            this.latestBufferOffset = 0;
            this.completeBuffers = [];
            this.stringFormat = stringFormat;
        }
        BufferWriter.prototype = Object.create(Writer.prototype);
        BufferWriter.prototype.writeByte = function(value) {
            this.latestBuffer[this.latestBufferOffset++] = value;
            if (this.latestBufferOffset >= this.latestBuffer.length) {
                this.completeBuffers.push(this.latestBuffer);
                this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
                this.latestBufferOffset = 0;
            }
            this.byteLength++;
        };
        BufferWriter.prototype.writeFloat32 = function(value) {
            var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
            buffer.writeFloatBE(value, 0);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.writeFloat64 = function(value) {
            var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(8);
            buffer.writeDoubleBE(value, 0);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.writeString = function(string, lengthFunc) {
            var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(string, 'utf-8');
            lengthFunc(buffer.length);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.canWriteBinary = function(data) {
            return data instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"];
        };
        BufferWriter.prototype.writeBinary = function(buffer, lengthFunc) {
            lengthFunc(buffer.length);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.writeBuffer = function(chunk) {
            if (!(chunk instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"])) throw new TypeError('BufferWriter only accepts Buffers');
            if (!this.latestBufferOffset) {
                this.completeBuffers.push(chunk);
            } else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {
                chunk.copy(this.latestBuffer, this.latestBufferOffset);
                this.latestBufferOffset += chunk.length;
                if (this.latestBufferOffset >= this.latestBuffer.length) {
                    this.completeBuffers.push(this.latestBuffer);
                    this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
                    this.latestBufferOffset = 0;
                }
            } else {
                this.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));
                this.completeBuffers.push(chunk);
                this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
                this.latestBufferOffset = 0;
            }
            this.byteLength += chunk.length;
        };
        BufferWriter.prototype.result = function() {
            var result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.byteLength);
            var offset = 0;
            for(var i = 0; i < this.completeBuffers.length; i++){
                var buffer = this.completeBuffers[i];
                buffer.copy(result, offset, 0, buffer.length);
                offset += buffer.length;
            }
            if (this.latestBufferOffset) {
                this.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);
            }
            if (this.stringFormat) return result.toString(this.stringFormat);
            return result;
        };
        if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function') {
            api.addReader(function(data, format) {
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(data)) {
                    return new BufferReader(data);
                }
                if (format === 'hex' || format === 'base64') {
                    var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(data, format);
                    return new BufferReader(buffer);
                }
            });
            api.addWriter(function(format) {
                if (!format || format === 'buffer') {
                    return new BufferWriter();
                } else if (format === 'hex' || format === 'base64') {
                    return new BufferWriter(format);
                }
            });
        }
        function HexReader(hex) {
            this.hex = hex;
            this.pos = 0;
        }
        HexReader.prototype = Object.create(Reader.prototype);
        HexReader.prototype.peekByte = function() {
            var pair = this.hex.substring(this.pos, 2);
            return parseInt(pair, 16);
        };
        HexReader.prototype.readByte = function() {
            var pair = this.hex.substring(this.pos, this.pos + 2);
            this.pos += 2;
            return parseInt(pair, 16);
        };
        HexReader.prototype.readChunk = function(length) {
            var hex = this.hex.substring(this.pos, this.pos + length * 2);
            this.pos += length * 2;
            if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function') return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(hex, 'hex');
            return new BinaryHex(hex);
        };
        function HexWriter(finalFormat) {
            this.$hex = '';
            this.finalFormat = finalFormat || 'hex';
        }
        HexWriter.prototype = Object.create(Writer.prototype);
        HexWriter.prototype.writeByte = function(value) {
            if (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);
            var hex = value.toString(16);
            if (hex.length == 1) {
                hex = '0' + hex;
            }
            this.$hex += hex;
        };
        HexWriter.prototype.canWriteBinary = function(chunk) {
            return chunk instanceof BinaryHex || typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function' && chunk instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"];
        };
        HexWriter.prototype.writeBinary = function(chunk, lengthFunction) {
            if (chunk instanceof BinaryHex) {
                lengthFunction(chunk.length());
                this.$hex += chunk.$hex;
            } else if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function' && chunk instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]) {
                lengthFunction(chunk.length);
                this.$hex += chunk.toString('hex');
            } else {
                throw new TypeError('HexWriter only accepts BinaryHex or Buffers');
            }
        };
        HexWriter.prototype.result = function() {
            if (this.finalFormat === 'buffer' && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function') {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(this.$hex, 'hex');
            }
            return new BinaryHex(this.$hex).toString(this.finalFormat);
        };
        HexWriter.prototype.writeString = function(string, lengthFunction) {
            var buffer = BinaryHex.fromUtf8String(string);
            lengthFunction(buffer.length());
            this.$hex += buffer.$hex;
        };
        api.addReader(function(data, format) {
            if (data instanceof BinaryHex || data.$hex) {
                return new HexReader(data.$hex);
            }
            if (format === 'hex') {
                return new HexReader(data);
            }
        });
        api.addWriter(function(format) {
            if (format === 'hex') {
                return new HexWriter();
            }
        });
        return api;
    }();
    CBOR.addSemanticEncode(0, function(data) {
        if (data instanceof Date) {
            return data.toISOString();
        }
    }).addSemanticDecode(0, function(isoString) {
        return new Date(isoString);
    }).addSemanticDecode(1, function(isoString) {
        return new Date(isoString);
    });
    return CBOR;
}); //# sourceMappingURL=cbor-sync.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataItem = exports.addWriter = exports.addReader = exports.addSemanticEncode = exports.addSemanticDecode = exports.decodeToDataItem = exports.encodeDataItem = void 0;
var cbor_sync_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/cbor-sync.js [app-client] (ecmascript)");
Object.defineProperty(exports, "encodeDataItem", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.encodeDataItem;
    }
});
Object.defineProperty(exports, "decodeToDataItem", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.decodeToDataItem;
    }
});
Object.defineProperty(exports, "addSemanticDecode", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addSemanticDecode;
    }
});
Object.defineProperty(exports, "addSemanticEncode", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addSemanticEncode;
    }
});
Object.defineProperty(exports, "addReader", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addReader;
    }
});
Object.defineProperty(exports, "addWriter", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addWriter;
    }
});
var DataItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)");
Object.defineProperty(exports, "DataItem", {
    enumerable: true,
    get: function() {
        return DataItem_1.DataItem;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.patchTags = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const alreadyPatchedTag = [];
const patchTags = (tags)=>{
    tags.forEach((tag)=>{
        if (alreadyPatchedTag.find((i)=>i === tag)) return;
        (0, lib_1.addSemanticEncode)(tag, (data)=>{
            if (data instanceof lib_1.DataItem) {
                if (data.getTag() === tag) {
                    return data.getData();
                }
            }
        });
        (0, lib_1.addSemanticDecode)(tag, (data)=>{
            return new lib_1.DataItem(data, tag);
        });
        alreadyPatchedTag.push(tag);
    });
};
exports.patchTags = patchTags; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegistryTypes = exports.RegistryType = void 0;
class RegistryType {
    constructor(type, tag){
        this.type = type;
        this.tag = tag;
        this.getTag = ()=>this.tag;
        this.getType = ()=>this.type;
    }
}
exports.RegistryType = RegistryType;
exports.RegistryTypes = {
    UUID: new RegistryType('uuid', 37),
    BYTES: new RegistryType('bytes', undefined),
    CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),
    CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),
    CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),
    CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),
    CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),
    CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),
    CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311),
    CRYPTO_MULTI_ACCOUNTS: new RegistryType("crypto-multi-accounts", 1103),
    QR_HARDWARE_CALL: new RegistryType("qr-hardware-call", 1201),
    KEY_DERIVATION_CALL: new RegistryType("key-derivation-call", 1301),
    KEY_DERIVATION_SCHEMA: new RegistryType("key-derivation-schema", 1302)
}; //# sourceMappingURL=RegistryType.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ScriptExpressions = exports.ScriptExpression = void 0;
class ScriptExpression {
    constructor(tag, expression){
        this.tag = tag;
        this.expression = expression;
        this.getTag = ()=>this.tag;
        this.getExpression = ()=>this.expression;
    }
}
exports.ScriptExpression = ScriptExpression;
ScriptExpression.fromTag = (tag)=>{
    const se = Object.values(exports.ScriptExpressions).find((se)=>se.getTag() === tag);
    return se;
};
exports.ScriptExpressions = {
    SCRIPT_HASH: new ScriptExpression(400, 'sh'),
    WITNESS_SCRIPT_HASH: new ScriptExpression(401, 'wsh'),
    PUBLIC_KEY: new ScriptExpression(402, 'pk'),
    PUBLIC_KEY_HASH: new ScriptExpression(403, 'pkh'),
    WITNESS_PUBLIC_KEY_HASH: new ScriptExpression(404, 'wpkh'),
    COMBO: new ScriptExpression(405, 'combo'),
    MULTISIG: new ScriptExpression(406, 'multi'),
    SORTED_MULTISIG: new ScriptExpression(407, 'sortedmulti'),
    ADDRESS: new ScriptExpression(307, 'addr'),
    RAW_SCRIPT: new ScriptExpression(408, 'raw')
}; //# sourceMappingURL=ScriptExpression.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/patchCBOR.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const ScriptExpression_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)");
const registryTags = Object.values(RegistryType_1.RegistryTypes).filter((r)=>!!r.getTag()).map((r)=>r.getTag());
const scriptExpressionTags = Object.values(ScriptExpression_1.ScriptExpressions).map((se)=>se.getTag());
(0, utils_1.patchTags)(registryTags.concat(scriptExpressionTags)); //# sourceMappingURL=patchCBOR.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegistryItem = void 0;
const bc_ur_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
class RegistryItem {
    constructor(){
        this.toCBOR = ()=>{
            if (this.toDataItem() === undefined) {
                throw new Error(`#[ur-registry][RegistryItem][fn.toCBOR]: registry ${this.getRegistryType()}'s method toDataItem returns undefined`);
            }
            return (0, lib_1.encodeDataItem)(this.toDataItem());
        };
        this.toUR = ()=>{
            return new bc_ur_1.UR(this.toCBOR(), this.getRegistryType().getType());
        };
        this.toUREncoder = (maxFragmentLength, firstSeqNum, minFragmentLength)=>{
            const ur = this.toUR();
            const urEncoder = new bc_ur_1.UREncoder(ur, maxFragmentLength, firstSeqNum, minFragmentLength);
            return urEncoder;
        };
    }
}
exports.RegistryItem = RegistryItem; //# sourceMappingURL=RegistryItem.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoCoinInfo = exports.Network = exports.Type = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys["type"] = "1";
    Keys["network"] = "2";
})(Keys || (Keys = {}));
var Type;
(function(Type) {
    Type[Type["bitcoin"] = 0] = "bitcoin";
})(Type = exports.Type || (exports.Type = {}));
var Network;
(function(Network) {
    Network[Network["mainnet"] = 0] = "mainnet";
    Network[Network["testnet"] = 1] = "testnet";
})(Network = exports.Network || (exports.Network = {}));
class CryptoCoinInfo extends RegistryItem_1.RegistryItem {
    constructor(type, network){
        super();
        this.type = type;
        this.network = network;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_COIN_INFO;
        };
        this.getType = ()=>{
            return this.type || Type.bitcoin;
        };
        this.getNetwork = ()=>{
            return this.network || Network.mainnet;
        };
        this.toDataItem = ()=>{
            const map = {};
            if (this.type) {
                map[Keys.type] = this.type;
            }
            if (this.network) {
                map[Keys.network] = this.network;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoCoinInfo = CryptoCoinInfo;
CryptoCoinInfo.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const type = map[Keys.type];
    const network = map[Keys.network];
    return new CryptoCoinInfo(type, network);
};
CryptoCoinInfo.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoCoinInfo.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoCoinInfo.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PathComponent = void 0;
class PathComponent {
    constructor(args){
        this.getIndex = ()=>this.index;
        this.isWildcard = ()=>this.wildcard;
        this.isHardened = ()=>this.hardened;
        this.index = args.index;
        this.hardened = args.hardened;
        if (this.index !== undefined) {
            this.wildcard = false;
        } else {
            this.wildcard = true;
        }
        if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {
            throw new Error(`#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`);
        }
    }
}
exports.PathComponent = PathComponent;
PathComponent.HARDENED_BIT = 0x80000000; //# sourceMappingURL=PathComponent.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoKeypath = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const PathComponent_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["components"] = 1] = "components";
    Keys[Keys["source_fingerprint"] = 2] = "source_fingerprint";
    Keys[Keys["depth"] = 3] = "depth";
})(Keys || (Keys = {}));
class CryptoKeypath extends RegistryItem_1.RegistryItem {
    constructor(components = [], sourceFingerprint, depth){
        super();
        this.components = components;
        this.sourceFingerprint = sourceFingerprint;
        this.depth = depth;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_KEYPATH;
        };
        this.getPath = ()=>{
            if (this.components.length === 0) {
                return undefined;
            }
            const components = this.components.map((component)=>{
                return `${component.isWildcard() ? '*' : component.getIndex()}${component.isHardened() ? "'" : ''}`;
            });
            return components.join('/');
        };
        this.getComponents = ()=>this.components;
        this.getSourceFingerprint = ()=>this.sourceFingerprint;
        this.getDepth = ()=>this.depth;
        this.toDataItem = ()=>{
            const map = {};
            const components = [];
            this.components && this.components.forEach((component)=>{
                if (component.isWildcard()) {
                    components.push([]);
                } else {
                    components.push(component.getIndex());
                }
                components.push(component.isHardened());
            });
            map[Keys.components] = components;
            if (this.sourceFingerprint) {
                map[Keys.source_fingerprint] = this.sourceFingerprint.readUInt32BE(0);
            }
            if (this.depth !== undefined) {
                map[Keys.depth] = this.depth;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoKeypath = CryptoKeypath;
CryptoKeypath.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const pathComponents = [];
    const components = map[Keys.components];
    if (components) {
        for(let i = 0; i < components.length; i += 2){
            const isHardened = components[i + 1];
            const path = components[i];
            if (typeof path === 'number') {
                pathComponents.push(new PathComponent_1.PathComponent({
                    index: path,
                    hardened: isHardened
                }));
            } else {
                pathComponents.push(new PathComponent_1.PathComponent({
                    hardened: isHardened
                }));
            }
        }
    }
    const _sourceFingerprint = map[Keys.source_fingerprint];
    let sourceFingerprint;
    if (_sourceFingerprint) {
        sourceFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
        sourceFingerprint.writeUInt32BE(_sourceFingerprint, 0);
    }
    const depth = map[Keys.depth];
    return new CryptoKeypath(pathComponents, sourceFingerprint, depth);
};
CryptoKeypath.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoKeypath.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoKeypath.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoHDKey = void 0;
const bs58check_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/bs58check@2.1.2/node_modules/bs58check/index.js [app-client] (ecmascript)");
const CryptoCoinInfo_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)");
const CryptoKeypath_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["is_master"] = 1] = "is_master";
    Keys[Keys["is_private"] = 2] = "is_private";
    Keys[Keys["key_data"] = 3] = "key_data";
    Keys[Keys["chain_code"] = 4] = "chain_code";
    Keys[Keys["use_info"] = 5] = "use_info";
    Keys[Keys["origin"] = 6] = "origin";
    Keys[Keys["children"] = 7] = "children";
    Keys[Keys["parent_fingerprint"] = 8] = "parent_fingerprint";
    Keys[Keys["name"] = 9] = "name";
    Keys[Keys["note"] = 10] = "note";
})(Keys || (Keys = {}));
class CryptoHDKey extends RegistryItem_1.RegistryItem {
    constructor(args){
        super();
        this.isECKey = ()=>{
            return false;
        };
        this.getKey = ()=>this.key;
        this.getChainCode = ()=>this.chainCode;
        this.isMaster = ()=>this.master;
        this.isPrivateKey = ()=>!!this.privateKey;
        this.getUseInfo = ()=>this.useInfo;
        this.getOrigin = ()=>this.origin;
        this.getChildren = ()=>this.children;
        this.getParentFingerprint = ()=>this.parentFingerprint;
        this.getName = ()=>this.name;
        this.getNote = ()=>this.note;
        this.getBip32Key = ()=>{
            var _a, _b, _c;
            let version;
            let depth;
            let index = 0;
            let parentFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4).fill(0);
            if (this.isMaster()) {
                version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from('0488ADE4', 'hex');
                depth = 0;
                index = 0;
            } else {
                depth = ((_a = this.getOrigin()) === null || _a === void 0 ? void 0 : _a.getComponents().length) || ((_b = this.getOrigin()) === null || _b === void 0 ? void 0 : _b.getDepth());
                const paths = (_c = this.getOrigin()) === null || _c === void 0 ? void 0 : _c.getComponents();
                const lastPath = paths[paths.length - 1];
                if (lastPath) {
                    index = lastPath.isHardened() ? lastPath.getIndex() + 0x80000000 : lastPath.getIndex();
                    if (this.getParentFingerprint()) {
                        parentFingerprint = this.getParentFingerprint();
                    }
                }
                if (this.isPrivateKey()) {
                    version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from('0488ADE4', 'hex');
                } else {
                    version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from('0488B21E', 'hex');
                }
            }
            const depthBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(1);
            depthBuffer.writeUInt8(depth, 0);
            const indexBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
            indexBuffer.writeUInt32BE(index, 0);
            const chainCode = this.getChainCode();
            const key = this.getKey();
            return (0, bs58check_1.encode)(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].concat([
                version,
                depthBuffer,
                parentFingerprint,
                indexBuffer,
                chainCode,
                key
            ]));
        };
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_HDKEY;
        };
        this.getOutputDescriptorContent = ()=>{
            var _a, _b, _c, _d, _e, _f, _g;
            let result = '';
            if (this.getOrigin()) {
                if (((_a = this.getOrigin()) === null || _a === void 0 ? void 0 : _a.getSourceFingerprint()) && ((_b = this.getOrigin()) === null || _b === void 0 ? void 0 : _b.getPath())) {
                    result += `${(_d = (_c = this.getOrigin()) === null || _c === void 0 ? void 0 : _c.getSourceFingerprint()) === null || _d === void 0 ? void 0 : _d.toString('hex')}/${(_e = this.getOrigin()) === null || _e === void 0 ? void 0 : _e.getPath()}`;
                }
            }
            result += this.getBip32Key();
            if (this.getChildren()) {
                if ((_f = this.getChildren()) === null || _f === void 0 ? void 0 : _f.getPath()) {
                    result += `/${(_g = this.getChildren()) === null || _g === void 0 ? void 0 : _g.getPath()}`;
                }
            }
            return result;
        };
        this.setupMasterKey = (args)=>{
            this.master = true;
            this.key = args.key;
            this.chainCode = args.chainCode;
        };
        this.setupDeriveKey = (args)=>{
            this.master = false;
            this.privateKey = args.isPrivateKey;
            this.key = args.key;
            this.chainCode = args.chainCode;
            this.useInfo = args.useInfo;
            this.origin = args.origin;
            this.children = args.children;
            this.parentFingerprint = args.parentFingerprint;
            this.name = args.name;
            this.note = args.note;
        };
        this.toDataItem = ()=>{
            const map = {};
            if (this.master) {
                map[Keys.is_master] = true;
                map[Keys.key_data] = this.key;
                map[Keys.chain_code] = this.chainCode;
            } else {
                if (this.privateKey !== undefined) {
                    map[Keys.is_private] = this.privateKey;
                }
                map[Keys.key_data] = this.key;
                if (this.chainCode) {
                    map[Keys.chain_code] = this.chainCode;
                }
                if (this.useInfo) {
                    const useInfo = this.useInfo.toDataItem();
                    useInfo.setTag(this.useInfo.getRegistryType().getTag());
                    map[Keys.use_info] = useInfo;
                }
                if (this.origin) {
                    const origin = this.origin.toDataItem();
                    origin.setTag(this.origin.getRegistryType().getTag());
                    map[Keys.origin] = origin;
                }
                if (this.children) {
                    const children = this.children.toDataItem();
                    children.setTag(this.children.getRegistryType().getTag());
                    map[Keys.children] = children;
                }
                if (this.parentFingerprint) {
                    map[Keys.parent_fingerprint] = this.parentFingerprint.readUInt32BE(0);
                }
                if (this.name !== undefined) {
                    map[Keys.name] = this.name;
                }
                if (this.note !== undefined) {
                    map[Keys.note] = this.note;
                }
            }
            return new lib_1.DataItem(map);
        };
        if (args.isMaster) {
            this.setupMasterKey(args);
        } else {
            this.setupDeriveKey(args);
        }
    }
}
exports.CryptoHDKey = CryptoHDKey;
CryptoHDKey.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const isMaster = !!map[Keys.is_master];
    const isPrivateKey = map[Keys.is_private];
    const key = map[Keys.key_data];
    const chainCode = map[Keys.chain_code];
    const useInfo = map[Keys.use_info] ? CryptoCoinInfo_1.CryptoCoinInfo.fromDataItem(map[Keys.use_info]) : undefined;
    const origin = map[Keys.origin] ? CryptoKeypath_1.CryptoKeypath.fromDataItem(map[Keys.origin]) : undefined;
    const children = map[Keys.children] ? CryptoKeypath_1.CryptoKeypath.fromDataItem(map[Keys.children]) : undefined;
    const _parentFingerprint = map[Keys.parent_fingerprint];
    let parentFingerprint = undefined;
    if (_parentFingerprint) {
        parentFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
        parentFingerprint.writeUInt32BE(_parentFingerprint, 0);
    }
    const name = map[Keys.name];
    const note = map[Keys.note];
    return new CryptoHDKey({
        isMaster,
        isPrivateKey,
        key,
        chainCode,
        useInfo,
        origin,
        children,
        parentFingerprint,
        name,
        note
    });
};
CryptoHDKey.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoHDKey.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoHDKey.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoECKey = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["curve"] = 1] = "curve";
    Keys[Keys["private"] = 2] = "private";
    Keys[Keys["data"] = 3] = "data";
})(Keys || (Keys = {}));
class CryptoECKey extends RegistryItem_1.RegistryItem {
    constructor(args){
        super();
        this.isECKey = ()=>{
            return true;
        };
        this.getCurve = ()=>this.curve || 0;
        this.isPrivateKey = ()=>this.privateKey || false;
        this.getData = ()=>this.data;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_ECKEY;
        };
        this.toDataItem = ()=>{
            const map = {};
            if (this.curve) {
                map[Keys.curve] = this.curve;
            }
            if (this.privateKey !== undefined) {
                map[Keys.private] = this.privateKey;
            }
            map[Keys.data] = this.data;
            return new lib_1.DataItem(map);
        };
        this.getOutputDescriptorContent = ()=>{
            return this.data.toString('hex');
        };
        this.data = args.data;
        this.curve = args.curve;
        this.privateKey = args.privateKey || undefined;
    }
}
exports.CryptoECKey = CryptoECKey;
CryptoECKey.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const curve = map[Keys.curve];
    const privateKey = map[Keys.private];
    const data = map[Keys.data];
    if (!data) {
        throw new Error(`#[ur-registry][CryptoECKey][fn.fromDataItem]: decoded [dataItem][#data.data] is undefined: ${dataItem}`);
    }
    return new CryptoECKey({
        data,
        curve,
        privateKey
    });
};
CryptoECKey.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoECKey.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoECKey.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Bytes = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
class Bytes extends RegistryItem_1.RegistryItem {
    constructor(bytes){
        super();
        this.bytes = bytes;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.BYTES;
        };
        this.getData = ()=>this.bytes;
        this.toDataItem = ()=>{
            return new lib_1.DataItem(this.bytes);
        };
    }
}
exports.Bytes = Bytes;
Bytes.fromDataItem = (dataItem)=>{
    const bytes = dataItem.getData();
    if (!bytes) {
        throw new Error(`#[ur-registry][Bytes][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);
    }
    return new Bytes(bytes);
};
Bytes.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return Bytes.fromDataItem(dataItem);
}; //# sourceMappingURL=Bytes.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MultiKey = void 0;
const CryptoECKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)");
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
const DataItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["threshold"] = 1] = "threshold";
    Keys[Keys["keys"] = 2] = "keys";
})(Keys || (Keys = {}));
class MultiKey extends RegistryItem_1.RegistryItem {
    constructor(threshold, keys){
        super();
        this.threshold = threshold;
        this.keys = keys;
        this.getThreshold = ()=>this.threshold;
        this.getKeys = ()=>this.keys;
        this.toDataItem = ()=>{
            const map = {};
            map[Keys.threshold] = this.threshold;
            const keys = this.keys.map((k)=>{
                const dataItem = k.toDataItem();
                dataItem.setTag(k.getRegistryType().getTag());
                return dataItem;
            });
            map[Keys.keys] = keys;
            return new DataItem_1.DataItem(map);
        };
        this.getOutputDescriptorContent = ()=>{
            return [
                this.getThreshold(),
                this.keys.map((k)=>k.getOutputDescriptorContent()).join(',')
            ].join(',');
        };
    }
}
exports.MultiKey = MultiKey;
MultiKey.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const threshold = map[Keys.threshold];
    const _keys = map[Keys.keys];
    const keys = [];
    _keys.forEach((k)=>{
        if (k.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {
            keys.push(CryptoHDKey_1.CryptoHDKey.fromDataItem(k));
        } else if (k.getTag() === RegistryType_1.RegistryTypes.CRYPTO_ECKEY.getTag()) {
            keys.push(CryptoECKey_1.CryptoECKey.fromDataItem(k));
        }
    });
    return new MultiKey(threshold, keys);
}; //# sourceMappingURL=MultiKey.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoOutput = void 0;
const CryptoECKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)");
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const MultiKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const ScriptExpression_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)");
class CryptoOutput extends RegistryItem_1.RegistryItem {
    constructor(scriptExpressions, cryptoKey){
        super();
        this.scriptExpressions = scriptExpressions;
        this.cryptoKey = cryptoKey;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_OUTPUT;
        };
        this.getCryptoKey = ()=>this.cryptoKey;
        this.getHDKey = ()=>{
            if (this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {
                return this.cryptoKey;
            } else {
                return undefined;
            }
        };
        this.getECKey = ()=>{
            if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey) {
                return this.cryptoKey;
            } else {
                return undefined;
            }
        };
        this.getMultiKey = ()=>{
            if (this.cryptoKey instanceof MultiKey_1.MultiKey) {
                return this.cryptoKey;
            } else {
                return undefined;
            }
        };
        this.getScriptExpressions = ()=>this.scriptExpressions;
        this._toOutputDescriptor = (seIndex)=>{
            if (seIndex >= this.scriptExpressions.length) {
                return this.cryptoKey.getOutputDescriptorContent();
            } else {
                return `${this.scriptExpressions[seIndex].getExpression()}(${this._toOutputDescriptor(seIndex + 1)})`;
            }
        };
        this.toString = ()=>{
            return this._toOutputDescriptor(0);
        };
        this.toDataItem = ()=>{
            let dataItem = this.cryptoKey.toDataItem();
            if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey || this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {
                dataItem.setTag(this.cryptoKey.getRegistryType().getTag());
            }
            const clonedSe = [
                ...this.scriptExpressions
            ];
            clonedSe.reverse().forEach((se)=>{
                const tagValue = se.getTag();
                if (dataItem.getTag() === undefined) {
                    dataItem.setTag(tagValue);
                } else {
                    dataItem = new lib_1.DataItem(dataItem, tagValue);
                }
            });
            return dataItem;
        };
    }
}
exports.CryptoOutput = CryptoOutput;
CryptoOutput.fromDataItem = (dataItem)=>{
    const scriptExpressions = [];
    let _dataItem = dataItem;
    while(true){
        let _tag = _dataItem.getTag();
        const se = ScriptExpression_1.ScriptExpression.fromTag(_tag);
        if (se) {
            scriptExpressions.push(se);
            if (_dataItem.getData() instanceof lib_1.DataItem) {
                _dataItem = _dataItem.getData();
                _tag = _dataItem.getTag();
            } else {
                break;
            }
        } else {
            break;
        }
    }
    const seLength = scriptExpressions.length;
    const isMultiKey = seLength > 0 && (scriptExpressions[seLength - 1].getExpression() === ScriptExpression_1.ScriptExpressions.MULTISIG.getExpression() || scriptExpressions[seLength - 1].getExpression() === ScriptExpression_1.ScriptExpressions.SORTED_MULTISIG.getExpression());
    if (isMultiKey) {
        const multiKey = MultiKey_1.MultiKey.fromDataItem(_dataItem);
        return new CryptoOutput(scriptExpressions, multiKey);
    }
    if (_dataItem.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {
        const cryptoHDKey = CryptoHDKey_1.CryptoHDKey.fromDataItem(_dataItem);
        return new CryptoOutput(scriptExpressions, cryptoHDKey);
    } else {
        const cryptoECKey = CryptoECKey_1.CryptoECKey.fromDataItem(_dataItem);
        return new CryptoOutput(scriptExpressions, cryptoECKey);
    }
};
CryptoOutput.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoOutput.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoOutput.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoPSBT.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoPSBT = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
class CryptoPSBT extends RegistryItem_1.RegistryItem {
    constructor(psbt){
        super();
        this.psbt = psbt;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.CRYPTO_PSBT;
        this.getPSBT = ()=>this.psbt;
        this.toDataItem = ()=>{
            return new lib_1.DataItem(this.psbt);
        };
    }
}
exports.CryptoPSBT = CryptoPSBT;
CryptoPSBT.fromDataItem = (dataItem)=>{
    const psbt = dataItem.getData();
    if (!psbt) {
        throw new Error(`#[ur-registry][CryptoPSBT][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);
    }
    return new CryptoPSBT(psbt);
};
CryptoPSBT.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoPSBT.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoPSBT.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoAccount.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoAccount = void 0;
const _1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/index.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["masterFingerprint"] = 1] = "masterFingerprint";
    Keys[Keys["outputDescriptors"] = 2] = "outputDescriptors";
})(Keys || (Keys = {}));
class CryptoAccount extends RegistryItem_1.RegistryItem {
    constructor(masterFingerprint, outputDescriptors){
        super();
        this.masterFingerprint = masterFingerprint;
        this.outputDescriptors = outputDescriptors;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_ACCOUNT;
        };
        this.getMasterFingerprint = ()=>this.masterFingerprint;
        this.getOutputDescriptors = ()=>this.outputDescriptors;
        this.toDataItem = ()=>{
            const map = {};
            if (this.masterFingerprint) {
                map[Keys.masterFingerprint] = this.masterFingerprint.readUInt32BE(0);
            }
            if (this.outputDescriptors) {
                map[Keys.outputDescriptors] = this.outputDescriptors.map((item)=>item.toDataItem());
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoAccount = CryptoAccount;
CryptoAccount.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const masterFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
    const _masterFingerprint = map[Keys.masterFingerprint];
    if (_masterFingerprint) {
        masterFingerprint.writeUInt32BE(_masterFingerprint, 0);
    }
    const outputDescriptors = map[Keys.outputDescriptors];
    const cryptoOutputs = outputDescriptors.map((item)=>_1.CryptoOutput.fromDataItem(item));
    return new CryptoAccount(masterFingerprint, cryptoOutputs);
};
CryptoAccount.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoAccount.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoAccount.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/errors/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UnknownURTypeError = void 0;
class UnknownURTypeError extends Error {
    constructor(message){
        super(message);
    }
}
exports.UnknownURTypeError = UnknownURTypeError; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.URRegistryDecoder = void 0;
const bc_ur_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js [app-client] (ecmascript)");
const __1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/index.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const errors_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/errors/index.js [app-client] (ecmascript)");
class URRegistryDecoder extends bc_ur_1.URDecoder {
    constructor(){
        super(...arguments);
        this.resultRegistryType = ()=>{
            const ur = this.resultUR();
            switch(ur.type){
                case RegistryType_1.RegistryTypes.BYTES.getType():
                    return __1.Bytes.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getType():
                    return __1.CryptoHDKey.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_KEYPATH.getType():
                    return __1.CryptoKeypath.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_COIN_INFO.getType():
                    return __1.CryptoCoinInfo.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_ECKEY.getType():
                    return __1.CryptoECKey.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_OUTPUT.getType():
                    return __1.CryptoOutput.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_PSBT.getType():
                    return __1.CryptoPSBT.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_ACCOUNT.getType():
                    return __1.CryptoAccount.fromCBOR(ur.cbor);
                default:
                    throw new errors_1.UnknownURTypeError(`#[ur-registry][Decoder][fn.resultRegistryType]: registry type ${ur.type} is not supported now`);
            }
        };
    }
}
exports.URRegistryDecoder = URRegistryDecoder; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/CryptoMultiAccounts.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoMultiAccounts = void 0;
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["masterFingerprint"] = 1] = "masterFingerprint";
    Keys[Keys["keys"] = 2] = "keys";
    Keys[Keys["device"] = 3] = "device";
    Keys[Keys["deviceId"] = 4] = "deviceId";
    Keys[Keys["version"] = 5] = "version";
})(Keys || (Keys = {}));
class CryptoMultiAccounts extends RegistryItem_1.RegistryItem {
    constructor(masterFingerprint, keys, device, deviceId, version){
        super();
        this.masterFingerprint = masterFingerprint;
        this.keys = keys;
        this.device = device;
        this.deviceId = deviceId;
        this.version = version;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.CRYPTO_MULTI_ACCOUNTS;
        this.getMasterFingerprint = ()=>this.masterFingerprint;
        this.getKeys = ()=>this.keys;
        this.getDevice = ()=>this.device;
        this.getDeviceId = ()=>this.deviceId;
        this.getVersion = ()=>this.version;
        this.toDataItem = ()=>{
            const map = {};
            if (this.masterFingerprint) {
                map[Keys.masterFingerprint] = this.masterFingerprint.readUInt32BE(0);
            }
            if (this.keys) {
                map[Keys.keys] = this.keys.map((item)=>{
                    const dataItem = item.toDataItem();
                    dataItem.setTag(item.getRegistryType().getTag());
                    return dataItem;
                });
            }
            if (this.device) {
                map[Keys.device] = this.device;
            }
            if (this.deviceId) {
                map[Keys.deviceId] = this.deviceId;
            }
            if (this.version) {
                map[Keys.version] = this.version;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoMultiAccounts = CryptoMultiAccounts;
CryptoMultiAccounts.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const masterFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
    const _masterFingerprint = map[Keys.masterFingerprint];
    if (_masterFingerprint) {
        masterFingerprint.writeUInt32BE(_masterFingerprint, 0);
    }
    const keys = map[Keys.keys];
    const cryptoHDKeys = keys.map((item)=>CryptoHDKey_1.CryptoHDKey.fromDataItem(item));
    const device = map[Keys.device];
    const deviceId = map[Keys.deviceId];
    const version = map[Keys.version];
    return new CryptoMultiAccounts(masterFingerprint, cryptoHDKeys, device, deviceId, version);
};
CryptoMultiAccounts.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoMultiAccounts.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoMultiAccounts.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/DerivationSchema.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.KeyDerivationSchema = exports.DerivationAlgorithm = exports.Curve = void 0;
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const CryptoKeypath_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["keyPath"] = 1] = "keyPath";
    Keys[Keys["curve"] = 2] = "curve";
    Keys[Keys["algo"] = 3] = "algo";
    Keys[Keys["chainType"] = 4] = "chainType";
})(Keys || (Keys = {}));
var Curve;
(function(Curve) {
    Curve[Curve["secp256k1"] = 0] = "secp256k1";
    Curve[Curve["ed25519"] = 1] = "ed25519";
})(Curve = exports.Curve || (exports.Curve = {}));
var DerivationAlgorithm;
(function(DerivationAlgorithm) {
    DerivationAlgorithm[DerivationAlgorithm["slip10"] = 0] = "slip10";
    DerivationAlgorithm[DerivationAlgorithm["bip32ed25519"] = 1] = "bip32ed25519";
})(DerivationAlgorithm = exports.DerivationAlgorithm || (exports.DerivationAlgorithm = {}));
class KeyDerivationSchema extends RegistryItem_1.RegistryItem {
    constructor(keypath, curve = Curve.secp256k1, algo = DerivationAlgorithm.slip10, chainType){
        super();
        this.keypath = keypath;
        this.curve = curve;
        this.algo = algo;
        this.chainType = chainType;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.KEY_DERIVATION_SCHEMA;
        this.getKeypath = ()=>this.keypath;
        this.getCurve = ()=>this.curve;
        this.getAlgo = ()=>this.algo;
        this.getChainType = ()=>this.chainType;
        this.toDataItem = ()=>{
            const map = {};
            const dataItem = this.getKeypath().toDataItem();
            dataItem.setTag(this.getKeypath().getRegistryType().getTag());
            map[Keys.keyPath] = dataItem;
            map[Keys.curve] = this.curve;
            map[Keys.algo] = this.algo;
            if (this.chainType) {
                map[Keys.chainType] = this.chainType;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.KeyDerivationSchema = KeyDerivationSchema;
KeyDerivationSchema.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const keypaths = CryptoKeypath_1.CryptoKeypath.fromDataItem(map[Keys.keyPath]);
    const curve = map[Keys.curve];
    const algo = map[Keys.algo];
    const chainType = map[Keys.chainType];
    return new KeyDerivationSchema(keypaths, curve, algo, chainType);
};
KeyDerivationSchema.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return KeyDerivationSchema.fromDataItem(dataItem);
}; //# sourceMappingURL=DerivationSchema.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/KeyDerivation.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.KeyDerivation = void 0;
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const DerivationSchema_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/DerivationSchema.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["schemas"] = 1] = "schemas";
})(Keys || (Keys = {}));
class KeyDerivation extends RegistryItem_1.RegistryItem {
    constructor(schemas){
        super();
        this.schemas = schemas;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.KEY_DERIVATION_CALL;
        this.getSchemas = ()=>this.schemas;
        this.toDataItem = ()=>{
            const map = {};
            map[Keys.schemas] = this.schemas.map((schema)=>{
                const dataItem = schema.toDataItem();
                dataItem.setTag(schema.getRegistryType().getTag());
                return dataItem;
            });
            return new lib_1.DataItem(map);
        };
    }
}
exports.KeyDerivation = KeyDerivation;
KeyDerivation.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const schemas = map[Keys.schemas].map((keypath)=>DerivationSchema_1.KeyDerivationSchema.fromDataItem(keypath));
    return new KeyDerivation(schemas);
};
KeyDerivation.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return KeyDerivation.fromDataItem(dataItem);
}; //# sourceMappingURL=KeyDerivation.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/QRHardwareCall.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.QRHardwareCall = exports.QRHardwareCallVersion = exports.QRHardwareCallType = void 0;
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const KeyDerivation_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/KeyDerivation.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["type"] = 1] = "type";
    Keys[Keys["params"] = 2] = "params";
    Keys[Keys["origin"] = 3] = "origin";
    Keys[Keys["version"] = 4] = "version";
})(Keys || (Keys = {}));
var QRHardwareCallType;
(function(QRHardwareCallType) {
    QRHardwareCallType[QRHardwareCallType["KeyDerivation"] = 0] = "KeyDerivation";
})(QRHardwareCallType = exports.QRHardwareCallType || (exports.QRHardwareCallType = {}));
var QRHardwareCallVersion;
(function(QRHardwareCallVersion) {
    QRHardwareCallVersion[QRHardwareCallVersion["V0"] = 0] = "V0";
    QRHardwareCallVersion[QRHardwareCallVersion["V1"] = 1] = "V1";
})(QRHardwareCallVersion = exports.QRHardwareCallVersion || (exports.QRHardwareCallVersion = {}));
class QRHardwareCall extends RegistryItem_1.RegistryItem {
    constructor(type, params, origin, version){
        super();
        this.type = type;
        this.params = params;
        this.origin = origin;
        this.version = version;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.QR_HARDWARE_CALL;
        this.getType = ()=>this.type;
        this.getParams = ()=>this.params;
        this.getOrigin = ()=>this.origin;
        this.getVersion = ()=>this.version;
        this.toDataItem = ()=>{
            const map = {};
            map[Keys.type] = this.type;
            const param = this.params.toDataItem();
            param.setTag(this.params.getRegistryType().getTag());
            map[Keys.params] = param;
            if (this.origin) {
                map[Keys.origin] = this.origin;
            }
            if (this.version) {
                map[Keys.version] = this.version;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.QRHardwareCall = QRHardwareCall;
QRHardwareCall.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const type = map[Keys.type] || QRHardwareCallType.KeyDerivation;
    let params;
    switch(type){
        case QRHardwareCallType.KeyDerivation:
            params = KeyDerivation_1.KeyDerivation.fromDataItem(map[Keys.params]);
    }
    const origin = map[Keys.origin];
    const version = map[Keys.version];
    return new QRHardwareCall(type, params, origin, version);
};
QRHardwareCall.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return QRHardwareCall.fromDataItem(dataItem);
}; //# sourceMappingURL=QRHardwareCall.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/types.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Buffer = exports.extend = exports.PathComponent = exports.ScriptExpressions = exports.MultiKey = exports.CryptoPSBT = exports.CryptoOutput = exports.CryptoECKey = exports.CryptoCoinInfoNetwork = exports.CryptoCoinInfoType = exports.CryptoCoinInfo = exports.CryptoKeypath = exports.CryptoMultiAccounts = exports.CryptoHDKey = exports.CryptoAccount = exports.Bytes = exports.URRegistryDecoder = exports.DataItem = void 0;
const tslib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/patchCBOR.js [app-client] (ecmascript)");
const buffer_1 = __turbopack_context__.f({
    "buffer": {
        id: ()=>"[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)",
        module: ()=>__turbopack_context__.r("[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)")
    },
    "buffer/": {
        id: ()=>"[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)",
        module: ()=>__turbopack_context__.r("[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)")
    }
})("buffer/");
Object.defineProperty(exports, "Buffer", {
    enumerable: true,
    get: function() {
        return buffer_1.Buffer;
    }
});
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoHDKey", {
    enumerable: true,
    get: function() {
        return CryptoHDKey_1.CryptoHDKey;
    }
});
const CryptoKeypath_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoKeypath", {
    enumerable: true,
    get: function() {
        return CryptoKeypath_1.CryptoKeypath;
    }
});
const CryptoCoinInfo_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoCoinInfo", {
    enumerable: true,
    get: function() {
        return CryptoCoinInfo_1.CryptoCoinInfo;
    }
});
Object.defineProperty(exports, "CryptoCoinInfoType", {
    enumerable: true,
    get: function() {
        return CryptoCoinInfo_1.Type;
    }
});
Object.defineProperty(exports, "CryptoCoinInfoNetwork", {
    enumerable: true,
    get: function() {
        return CryptoCoinInfo_1.Network;
    }
});
const CryptoECKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoECKey", {
    enumerable: true,
    get: function() {
        return CryptoECKey_1.CryptoECKey;
    }
});
const Bytes_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js [app-client] (ecmascript)");
Object.defineProperty(exports, "Bytes", {
    enumerable: true,
    get: function() {
        return Bytes_1.Bytes;
    }
});
const CryptoOutput_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoOutput", {
    enumerable: true,
    get: function() {
        return CryptoOutput_1.CryptoOutput;
    }
});
const CryptoPSBT_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoPSBT.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoPSBT", {
    enumerable: true,
    get: function() {
        return CryptoPSBT_1.CryptoPSBT;
    }
});
const CryptoAccount_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoAccount.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoAccount", {
    enumerable: true,
    get: function() {
        return CryptoAccount_1.CryptoAccount;
    }
});
const Decoder_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js [app-client] (ecmascript)");
Object.defineProperty(exports, "URRegistryDecoder", {
    enumerable: true,
    get: function() {
        return Decoder_1.URRegistryDecoder;
    }
});
const MultiKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)");
Object.defineProperty(exports, "MultiKey", {
    enumerable: true,
    get: function() {
        return MultiKey_1.MultiKey;
    }
});
const ScriptExpression_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)");
Object.defineProperty(exports, "ScriptExpressions", {
    enumerable: true,
    get: function() {
        return ScriptExpression_1.ScriptExpressions;
    }
});
const PathComponent_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)");
Object.defineProperty(exports, "PathComponent", {
    enumerable: true,
    get: function() {
        return PathComponent_1.PathComponent;
    }
});
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
var lib_2 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
Object.defineProperty(exports, "DataItem", {
    enumerable: true,
    get: function() {
        return lib_2.DataItem;
    }
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)");
const CryptoMultiAccounts_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/CryptoMultiAccounts.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoMultiAccounts", {
    enumerable: true,
    get: function() {
        return CryptoMultiAccounts_1.CryptoMultiAccounts;
    }
});
const URlib = {
    URRegistryDecoder: Decoder_1.URRegistryDecoder,
    Bytes: Bytes_1.Bytes,
    CryptoAccount: CryptoAccount_1.CryptoAccount,
    CryptoHDKey: CryptoHDKey_1.CryptoHDKey,
    CryptoMultiAccounts: CryptoMultiAccounts_1.CryptoMultiAccounts,
    CryptoKeypath: CryptoKeypath_1.CryptoKeypath,
    CryptoCoinInfo: CryptoCoinInfo_1.CryptoCoinInfo,
    CryptoCoinInfoType: CryptoCoinInfo_1.Type,
    CryptoCoinInfoNetwork: CryptoCoinInfo_1.Network,
    CryptoECKey: CryptoECKey_1.CryptoECKey,
    CryptoOutput: CryptoOutput_1.CryptoOutput,
    CryptoPSBT: CryptoPSBT_1.CryptoPSBT,
    MultiKey: MultiKey_1.MultiKey,
    ScriptExpressions: ScriptExpression_1.ScriptExpressions,
    PathComponent: PathComponent_1.PathComponent
};
const cbor = {
    addReader: lib_1.addReader,
    addSemanticDecode: lib_1.addSemanticDecode,
    addSemanticEncode: lib_1.addSemanticEncode,
    addWriter: lib_1.addWriter,
    patchTags: utils_1.patchTags
};
const extend = {
    RegistryTypes: RegistryType_1.RegistryTypes,
    RegistryItem: RegistryItem_1.RegistryItem,
    RegistryType: RegistryType_1.RegistryType,
    decodeToDataItem: lib_1.decodeToDataItem,
    encodeDataItem: lib_1.encodeDataItem,
    cbor
};
exports.extend = extend;
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/errors/index.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoAccount.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoPSBT.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/CryptoMultiAccounts.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/QRHardwareCall.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/KeyDerivation.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/extended/DerivationSchema.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/patchCBOR.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/types.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.7.0/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)"), exports);
exports.default = URlib; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataItem = void 0;
class DataItem {
    constructor(data, tag){
        this.setTag = (tag)=>{
            this.tag = tag;
        };
        this.clearTag = ()=>{
            this.tag = undefined;
        };
        this.getTag = ()=>{
            return this.tag;
        };
        this.getData = ()=>{
            return this.data;
        };
        this.data = data;
        this.tag = tag;
    }
}
exports.DataItem = DataItem; //# sourceMappingURL=DataItem.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/cbor-sync.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
(function(global, factory) {
    if (typeof define === 'function' && define.amd) {
        ((r)=>r !== undefined && __turbopack_context__.v(r))(factory());
    } else if (("TURBOPACK compile-time value", "object") !== 'undefined' && module.exports) {
        module.exports = factory();
    } else {
        global.CBOR = factory();
    }
})(this, function() {
    const { DataItem } = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)");
    var CBOR = function() {
        function BinaryHex(hex) {
            this.$hex = hex;
        }
        BinaryHex.prototype = {
            length: function() {
                return this.$hex.length / 2;
            },
            toString: function(format) {
                if (!format || format === 'hex' || format === 16) return this.$hex;
                if (format === 'utf-8') {
                    var encoded = '';
                    for(var i = 0; i < this.$hex.length; i += 2){
                        encoded += '%' + this.$hex.substring(i, i + 2);
                    }
                    return decodeURIComponent(encoded);
                }
                if (format === 'latin') {
                    var encoded = [];
                    for(var i = 0; i < this.$hex.length; i += 2){
                        encoded.push(parseInt(this.$hex.substring(i, i + 2), 16));
                    }
                    return String.fromCharCode.apply(String, encoded);
                }
                throw new Error('Unrecognised format: ' + format);
            }
        };
        BinaryHex.fromLatinString = function(latinString) {
            var hex = '';
            for(var i = 0; i < latinString.length; i++){
                var pair = latinString.charCodeAt(i).toString(16);
                if (pair.length === 1) pair = '0' + pair;
                hex += pair;
            }
            return new BinaryHex(hex);
        };
        BinaryHex.fromUtf8String = function(utf8String) {
            var encoded = encodeURIComponent(utf8String);
            var hex = '';
            for(var i = 0; i < encoded.length; i++){
                if (encoded.charAt(i) === '%') {
                    hex += encoded.substring(i + 1, i + 3);
                    i += 2;
                } else {
                    var hexPair = encoded.charCodeAt(i).toString(16);
                    if (hexPair.length < 2) hexPair = '0' + hexPair;
                    hex += hexPair;
                }
            }
            return new BinaryHex(hex);
        };
        var semanticEncoders = [];
        var semanticDecoders = {};
        var notImplemented = function(label) {
            return function() {
                throw new Error(label + ' not implemented');
            };
        };
        function Reader() {}
        Reader.prototype = {
            peekByte: notImplemented('peekByte'),
            readByte: notImplemented('readByte'),
            readChunk: notImplemented('readChunk'),
            readFloat16: function() {
                var half = this.readUint16();
                var exponent = (half & 0x7fff) >> 10;
                var mantissa = half & 0x3ff;
                var negative = half & 0x8000;
                if (exponent === 0x1f) {
                    if (mantissa === 0) {
                        return negative ? -Infinity : Infinity;
                    }
                    return NaN;
                }
                var magnitude = exponent ? Math.pow(2, exponent - 25) * (1024 + mantissa) : Math.pow(2, -24) * mantissa;
                return negative ? -magnitude : magnitude;
            },
            readFloat32: function() {
                var intValue = this.readUint32();
                var exponent = (intValue & 0x7fffffff) >> 23;
                var mantissa = intValue & 0x7fffff;
                var negative = intValue & 0x80000000;
                if (exponent === 0xff) {
                    if (mantissa === 0) {
                        return negative ? -Infinity : Infinity;
                    }
                    return NaN;
                }
                var magnitude = exponent ? Math.pow(2, exponent - 23 - 127) * (8388608 + mantissa) : Math.pow(2, -23 - 126) * mantissa;
                return negative ? -magnitude : magnitude;
            },
            readFloat64: function() {
                var int1 = this.readUint32(), int2 = this.readUint32();
                var exponent = int1 >> 20 & 0x7ff;
                var mantissa = (int1 & 0xfffff) * 4294967296 + int2;
                var negative = int1 & 0x80000000;
                if (exponent === 0x7ff) {
                    if (mantissa === 0) {
                        return negative ? -Infinity : Infinity;
                    }
                    return NaN;
                }
                var magnitude = exponent ? Math.pow(2, exponent - 52 - 1023) * (4503599627370496 + mantissa) : Math.pow(2, -52 - 1022) * mantissa;
                return negative ? -magnitude : magnitude;
            },
            readUint16: function() {
                return this.readByte() * 256 + this.readByte();
            },
            readUint32: function() {
                return this.readUint16() * 65536 + this.readUint16();
            },
            readUint64: function() {
                return this.readUint32() * 4294967296 + this.readUint32();
            }
        };
        function Writer() {}
        Writer.prototype = {
            writeByte: notImplemented('writeByte'),
            result: notImplemented('result'),
            writeFloat16: notImplemented('writeFloat16'),
            writeFloat32: notImplemented('writeFloat32'),
            writeFloat64: notImplemented('writeFloat64'),
            writeUint16: function(value) {
                this.writeByte(value >> 8 & 0xff);
                this.writeByte(value & 0xff);
            },
            writeUint32: function(value) {
                this.writeUint16(value >> 16 & 0xffff);
                this.writeUint16(value & 0xffff);
            },
            writeUint64: function(value) {
                if (value >= 9007199254740992 || value <= -9007199254740992) {
                    throw new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');
                }
                this.writeUint32(Math.floor(value / 4294967296));
                this.writeUint32(value % 4294967296);
            },
            writeString: notImplemented('writeString'),
            canWriteBinary: function(chunk) {
                return false;
            },
            writeBinary: notImplemented('writeChunk')
        };
        function readHeaderRaw(reader) {
            var firstByte = reader.readByte();
            var majorType = firstByte >> 5, value = firstByte & 0x1f;
            return {
                type: majorType,
                value: value
            };
        }
        function valueFromHeader(header, reader) {
            var value = header.value;
            if (value < 24) {
                return value;
            } else if (value == 24) {
                return reader.readByte();
            } else if (value == 25) {
                return reader.readUint16();
            } else if (value == 26) {
                return reader.readUint32();
            } else if (value == 27) {
                return reader.readUint64();
            } else if (value == 31) {
                return null;
            }
            notImplemented('Additional info: ' + value)();
        }
        function writeHeaderRaw(type, value, writer) {
            writer.writeByte(type << 5 | value);
        }
        function writeHeader(type, value, writer) {
            var firstByte = type << 5;
            if (value < 24) {
                writer.writeByte(firstByte | value);
            } else if (value < 256) {
                writer.writeByte(firstByte | 24);
                writer.writeByte(value);
            } else if (value < 65536) {
                writer.writeByte(firstByte | 25);
                writer.writeUint16(value);
            } else if (value < 4294967296) {
                writer.writeByte(firstByte | 26);
                writer.writeUint32(value);
            } else {
                writer.writeByte(firstByte | 27);
                writer.writeUint64(value);
            }
        }
        var stopCode = new Error();
        function decodeReader(reader) {
            var header = readHeaderRaw(reader);
            switch(header.type){
                case 0:
                    return valueFromHeader(header, reader);
                case 1:
                    return -1 - valueFromHeader(header, reader);
                case 2:
                    return reader.readChunk(valueFromHeader(header, reader));
                case 3:
                    var buffer = reader.readChunk(valueFromHeader(header, reader));
                    return buffer.toString('utf-8');
                case 4:
                case 5:
                    var arrayLength = valueFromHeader(header, reader);
                    var result = [];
                    if (arrayLength !== null) {
                        if (header.type === 5) {
                            arrayLength *= 2;
                        }
                        for(var i = 0; i < arrayLength; i++){
                            result[i] = decodeReader(reader);
                        }
                    } else {
                        var item;
                        while((item = decodeReader(reader)) !== stopCode){
                            result.push(item);
                        }
                    }
                    if (header.type === 5) {
                        var objResult = {};
                        for(var i = 0; i < result.length; i += 2){
                            objResult[result[i]] = result[i + 1];
                        }
                        return objResult;
                    } else {
                        return result;
                    }
                case 6:
                    var tag = valueFromHeader(header, reader);
                    var decoder = semanticDecoders[tag];
                    var result = decodeReader(reader);
                    return decoder ? decoder(result) : result;
                case 7:
                    if (header.value === 25) {
                        return reader.readFloat16();
                    } else if (header.value === 26) {
                        return reader.readFloat32();
                    } else if (header.value === 27) {
                        return reader.readFloat64();
                    }
                    switch(valueFromHeader(header, reader)){
                        case 20:
                            return false;
                        case 21:
                            return true;
                        case 22:
                            return null;
                        case 23:
                            return undefined;
                        case null:
                            return stopCode;
                        default:
                            throw new Error('Unknown fixed value: ' + header.value);
                    }
                default:
                    throw new Error('Unsupported header: ' + JSON.stringify(header));
            }
            throw new Error('not implemented yet');
        }
        function encodeWriter(data, writer) {
            for(var i = 0; i < semanticEncoders.length; i++){
                var replacement = semanticEncoders[i].fn(data);
                if (replacement !== undefined) {
                    writeHeader(6, semanticEncoders[i].tag, writer);
                    return encodeWriter(replacement, writer);
                }
            }
            if (data && typeof data.toCBOR === 'function') {
                data = data.toCBOR();
            }
            if (data === false) {
                writeHeader(7, 20, writer);
            } else if (data === true) {
                writeHeader(7, 21, writer);
            } else if (data === null) {
                writeHeader(7, 22, writer);
            } else if (data === undefined) {
                writeHeader(7, 23, writer);
            } else if (typeof data === 'number') {
                if (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {
                    if (data < 0) {
                        writeHeader(1, -1 - data, writer);
                    } else {
                        writeHeader(0, data, writer);
                    }
                } else {
                    writeHeaderRaw(7, 27, writer);
                    writer.writeFloat64(data);
                }
            } else if (typeof data === 'string') {
                writer.writeString(data, function(length) {
                    writeHeader(3, length, writer);
                });
            } else if (writer.canWriteBinary(data)) {
                writer.writeBinary(data, function(length) {
                    writeHeader(2, length, writer);
                });
            } else if (typeof data === 'object') {
                if (api.config.useToJSON && typeof data.toJSON === 'function') {
                    data = data.toJSON();
                }
                if (Array.isArray(data)) {
                    writeHeader(4, data.length, writer);
                    for(var i = 0; i < data.length; i++){
                        encodeWriter(data[i], writer);
                    }
                } else {
                    var keys = Object.keys(data);
                    writeHeader(5, keys.length, writer);
                    for(var i = 0; i < keys.length; i++){
                        const number = parseInt(keys[i]);
                        if (isNaN(number)) {
                            encodeWriter(keys[i], writer);
                            encodeWriter(data[keys[i]], writer);
                        } else {
                            encodeWriter(number, writer);
                            encodeWriter(data[keys[i]], writer);
                        }
                    }
                }
            } else {
                throw new Error('CBOR encoding not supported: ' + data);
            }
        }
        var readerFunctions = [];
        var writerFunctions = [];
        var api = {
            config: {
                useToJSON: true
            },
            addWriter: function(format, writerFunction) {
                if (typeof format === 'string') {
                    writerFunctions.push(function(f) {
                        if (format === f) return writerFunction(f);
                    });
                } else {
                    writerFunctions.push(format);
                }
            },
            addReader: function(format, readerFunction) {
                if (typeof format === 'string') {
                    readerFunctions.push(function(data, f) {
                        if (format === f) return readerFunction(data, f);
                    });
                } else {
                    readerFunctions.push(format);
                }
            },
            encode: function(data, format) {
                for(var i = 0; i < writerFunctions.length; i++){
                    var func = writerFunctions[i];
                    var writer = func(format);
                    if (writer) {
                        encodeWriter(data, writer);
                        return writer.result();
                    }
                }
                throw new Error('Unsupported output format: ' + format);
            },
            encodeDataItem: function(data, format) {
                for(var i = 0; i < writerFunctions.length; i++){
                    var func = writerFunctions[i];
                    var writer = func(format);
                    if (writer) {
                        if (data.getTag() !== undefined) {
                            encodeWriter(data, writer);
                            return writer.result();
                        } else {
                            encodeWriter(data.getData(), writer);
                            return writer.result();
                        }
                    }
                }
                throw new Error('Unsupported output format: ' + format);
            },
            decode: function(data, format) {
                for(var i = 0; i < readerFunctions.length; i++){
                    var func = readerFunctions[i];
                    var reader = func(data, format);
                    if (reader) {
                        return decodeReader(reader);
                    }
                }
                throw new Error('Unsupported input format: ' + format);
            },
            decodeToDataItem: function(data, format) {
                for(var i = 0; i < readerFunctions.length; i++){
                    var func = readerFunctions[i];
                    var reader = func(data, format);
                    if (reader) {
                        const result = decodeReader(reader);
                        if (result instanceof DataItem) {
                            return result;
                        } else {
                            return new DataItem(result);
                        }
                    }
                }
                throw new Error('Unsupported input format: ' + format);
            },
            addSemanticEncode: function(tag, fn) {
                if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {
                    throw new Error('Tag must be a positive integer');
                }
                semanticEncoders.push({
                    tag: tag,
                    fn: fn
                });
                return this;
            },
            addSemanticDecode: function(tag, fn) {
                if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {
                    throw new Error('Tag must be a positive integer');
                }
                semanticDecoders[tag] = fn;
                return this;
            }
        };
        function BufferReader(buffer) {
            this.buffer = buffer;
            this.pos = 0;
        }
        BufferReader.prototype = Object.create(Reader.prototype);
        BufferReader.prototype.peekByte = function() {
            return this.buffer[this.pos];
        };
        BufferReader.prototype.readByte = function() {
            return this.buffer[this.pos++];
        };
        BufferReader.prototype.readUint16 = function() {
            var result = this.buffer.readUInt16BE(this.pos);
            this.pos += 2;
            return result;
        };
        BufferReader.prototype.readUint32 = function() {
            var result = this.buffer.readUInt32BE(this.pos);
            this.pos += 4;
            return result;
        };
        BufferReader.prototype.readFloat32 = function() {
            var result = this.buffer.readFloatBE(this.pos);
            this.pos += 4;
            return result;
        };
        BufferReader.prototype.readFloat64 = function() {
            var result = this.buffer.readDoubleBE(this.pos);
            this.pos += 8;
            return result;
        };
        BufferReader.prototype.readChunk = function(length) {
            var result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(length);
            this.buffer.copy(result, 0, this.pos, this.pos += length);
            return result;
        };
        function BufferWriter(stringFormat) {
            this.byteLength = 0;
            this.defaultBufferLength = 16384;
            this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
            this.latestBufferOffset = 0;
            this.completeBuffers = [];
            this.stringFormat = stringFormat;
        }
        BufferWriter.prototype = Object.create(Writer.prototype);
        BufferWriter.prototype.writeByte = function(value) {
            this.latestBuffer[this.latestBufferOffset++] = value;
            if (this.latestBufferOffset >= this.latestBuffer.length) {
                this.completeBuffers.push(this.latestBuffer);
                this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
                this.latestBufferOffset = 0;
            }
            this.byteLength++;
        };
        BufferWriter.prototype.writeFloat32 = function(value) {
            var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
            buffer.writeFloatBE(value, 0);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.writeFloat64 = function(value) {
            var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(8);
            buffer.writeDoubleBE(value, 0);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.writeString = function(string, lengthFunc) {
            var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(string, 'utf-8');
            lengthFunc(buffer.length);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.canWriteBinary = function(data) {
            return data instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"];
        };
        BufferWriter.prototype.writeBinary = function(buffer, lengthFunc) {
            lengthFunc(buffer.length);
            this.writeBuffer(buffer);
        };
        BufferWriter.prototype.writeBuffer = function(chunk) {
            if (!(chunk instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"])) throw new TypeError('BufferWriter only accepts Buffers');
            if (!this.latestBufferOffset) {
                this.completeBuffers.push(chunk);
            } else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {
                chunk.copy(this.latestBuffer, this.latestBufferOffset);
                this.latestBufferOffset += chunk.length;
                if (this.latestBufferOffset >= this.latestBuffer.length) {
                    this.completeBuffers.push(this.latestBuffer);
                    this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
                    this.latestBufferOffset = 0;
                }
            } else {
                this.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));
                this.completeBuffers.push(chunk);
                this.latestBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.defaultBufferLength);
                this.latestBufferOffset = 0;
            }
            this.byteLength += chunk.length;
        };
        BufferWriter.prototype.result = function() {
            var result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(this.byteLength);
            var offset = 0;
            for(var i = 0; i < this.completeBuffers.length; i++){
                var buffer = this.completeBuffers[i];
                buffer.copy(result, offset, 0, buffer.length);
                offset += buffer.length;
            }
            if (this.latestBufferOffset) {
                this.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);
            }
            if (this.stringFormat) return result.toString(this.stringFormat);
            return result;
        };
        if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function') {
            api.addReader(function(data, format) {
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(data)) {
                    return new BufferReader(data);
                }
                if (format === 'hex' || format === 'base64') {
                    var buffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(data, format);
                    return new BufferReader(buffer);
                }
            });
            api.addWriter(function(format) {
                if (!format || format === 'buffer') {
                    return new BufferWriter();
                } else if (format === 'hex' || format === 'base64') {
                    return new BufferWriter(format);
                }
            });
        }
        function HexReader(hex) {
            this.hex = hex;
            this.pos = 0;
        }
        HexReader.prototype = Object.create(Reader.prototype);
        HexReader.prototype.peekByte = function() {
            var pair = this.hex.substring(this.pos, 2);
            return parseInt(pair, 16);
        };
        HexReader.prototype.readByte = function() {
            var pair = this.hex.substring(this.pos, this.pos + 2);
            this.pos += 2;
            return parseInt(pair, 16);
        };
        HexReader.prototype.readChunk = function(length) {
            var hex = this.hex.substring(this.pos, this.pos + length * 2);
            this.pos += length * 2;
            if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function') return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(hex, 'hex');
            return new BinaryHex(hex);
        };
        function HexWriter(finalFormat) {
            this.$hex = '';
            this.finalFormat = finalFormat || 'hex';
        }
        HexWriter.prototype = Object.create(Writer.prototype);
        HexWriter.prototype.writeByte = function(value) {
            if (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);
            var hex = value.toString(16);
            if (hex.length == 1) {
                hex = '0' + hex;
            }
            this.$hex += hex;
        };
        HexWriter.prototype.canWriteBinary = function(chunk) {
            return chunk instanceof BinaryHex || typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function' && chunk instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"];
        };
        HexWriter.prototype.writeBinary = function(chunk, lengthFunction) {
            if (chunk instanceof BinaryHex) {
                lengthFunction(chunk.length());
                this.$hex += chunk.$hex;
            } else if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function' && chunk instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]) {
                lengthFunction(chunk.length);
                this.$hex += chunk.toString('hex');
            } else {
                throw new TypeError('HexWriter only accepts BinaryHex or Buffers');
            }
        };
        HexWriter.prototype.result = function() {
            if (this.finalFormat === 'buffer' && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] === 'function') {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(this.$hex, 'hex');
            }
            return new BinaryHex(this.$hex).toString(this.finalFormat);
        };
        HexWriter.prototype.writeString = function(string, lengthFunction) {
            var buffer = BinaryHex.fromUtf8String(string);
            lengthFunction(buffer.length());
            this.$hex += buffer.$hex;
        };
        api.addReader(function(data, format) {
            if (data instanceof BinaryHex || data.$hex) {
                return new HexReader(data.$hex);
            }
            if (format === 'hex') {
                return new HexReader(data);
            }
        });
        api.addWriter(function(format) {
            if (format === 'hex') {
                return new HexWriter();
            }
        });
        return api;
    }();
    CBOR.addSemanticEncode(0, function(data) {
        if (data instanceof Date) {
            return data.toISOString();
        }
    }).addSemanticDecode(0, function(isoString) {
        return new Date(isoString);
    }).addSemanticDecode(1, function(isoString) {
        return new Date(isoString);
    });
    return CBOR;
}); //# sourceMappingURL=cbor-sync.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataItem = exports.addWriter = exports.addReader = exports.addSemanticEncode = exports.addSemanticDecode = exports.decodeToDataItem = exports.encodeDataItem = void 0;
var cbor_sync_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/cbor-sync.js [app-client] (ecmascript)");
Object.defineProperty(exports, "encodeDataItem", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.encodeDataItem;
    }
});
Object.defineProperty(exports, "decodeToDataItem", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.decodeToDataItem;
    }
});
Object.defineProperty(exports, "addSemanticDecode", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addSemanticDecode;
    }
});
Object.defineProperty(exports, "addSemanticEncode", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addSemanticEncode;
    }
});
Object.defineProperty(exports, "addReader", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addReader;
    }
});
Object.defineProperty(exports, "addWriter", {
    enumerable: true,
    get: function() {
        return cbor_sync_1.addWriter;
    }
});
var DataItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)");
Object.defineProperty(exports, "DataItem", {
    enumerable: true,
    get: function() {
        return DataItem_1.DataItem;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.patchTags = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const alreadyPatchedTag = [];
const patchTags = (tags)=>{
    tags.forEach((tag)=>{
        if (alreadyPatchedTag.find((i)=>i === tag)) return;
        (0, lib_1.addSemanticEncode)(tag, (data)=>{
            if (data instanceof lib_1.DataItem) {
                if (data.getTag() === tag) {
                    return data.getData();
                }
            }
        });
        (0, lib_1.addSemanticDecode)(tag, (data)=>{
            return new lib_1.DataItem(data, tag);
        });
        alreadyPatchedTag.push(tag);
    });
};
exports.patchTags = patchTags; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegistryTypes = exports.RegistryType = void 0;
class RegistryType {
    constructor(type, tag){
        this.type = type;
        this.tag = tag;
        this.getTag = ()=>this.tag;
        this.getType = ()=>this.type;
    }
}
exports.RegistryType = RegistryType;
exports.RegistryTypes = {
    UUID: new RegistryType('uuid', 37),
    BYTES: new RegistryType('bytes', undefined),
    CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),
    CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),
    CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),
    CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),
    CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),
    CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),
    CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311),
    CRYPTO_MULTI_ACCOUNTS: new RegistryType("crypto-multi-accounts", 1103)
}; //# sourceMappingURL=RegistryType.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ScriptExpressions = exports.ScriptExpression = void 0;
class ScriptExpression {
    constructor(tag, expression){
        this.tag = tag;
        this.expression = expression;
        this.getTag = ()=>this.tag;
        this.getExpression = ()=>this.expression;
    }
}
exports.ScriptExpression = ScriptExpression;
ScriptExpression.fromTag = (tag)=>{
    const se = Object.values(exports.ScriptExpressions).find((se)=>se.getTag() === tag);
    return se;
};
exports.ScriptExpressions = {
    SCRIPT_HASH: new ScriptExpression(400, 'sh'),
    WITNESS_SCRIPT_HASH: new ScriptExpression(401, 'wsh'),
    PUBLIC_KEY: new ScriptExpression(402, 'pk'),
    PUBLIC_KEY_HASH: new ScriptExpression(403, 'pkh'),
    WITNESS_PUBLIC_KEY_HASH: new ScriptExpression(404, 'wpkh'),
    COMBO: new ScriptExpression(405, 'combo'),
    MULTISIG: new ScriptExpression(406, 'multi'),
    SORTED_MULTISIG: new ScriptExpression(407, 'sortedmulti'),
    ADDRESS: new ScriptExpression(307, 'addr'),
    RAW_SCRIPT: new ScriptExpression(408, 'raw')
}; //# sourceMappingURL=ScriptExpression.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/patchCBOR.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const ScriptExpression_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)");
const registryTags = Object.values(RegistryType_1.RegistryTypes).filter((r)=>!!r.getTag()).map((r)=>r.getTag());
const scriptExpressionTags = Object.values(ScriptExpression_1.ScriptExpressions).map((se)=>se.getTag());
(0, utils_1.patchTags)(registryTags.concat(scriptExpressionTags)); //# sourceMappingURL=patchCBOR.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegistryItem = void 0;
const bc_ur_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
class RegistryItem {
    constructor(){
        this.toCBOR = ()=>{
            if (this.toDataItem() === undefined) {
                throw new Error(`#[ur-registry][RegistryItem][fn.toCBOR]: registry ${this.getRegistryType()}'s method toDataItem returns undefined`);
            }
            return (0, lib_1.encodeDataItem)(this.toDataItem());
        };
        this.toUR = ()=>{
            return new bc_ur_1.UR(this.toCBOR(), this.getRegistryType().getType());
        };
        this.toUREncoder = (maxFragmentLength, firstSeqNum, minFragmentLength)=>{
            const ur = this.toUR();
            const urEncoder = new bc_ur_1.UREncoder(ur, maxFragmentLength, firstSeqNum, minFragmentLength);
            return urEncoder;
        };
    }
}
exports.RegistryItem = RegistryItem; //# sourceMappingURL=RegistryItem.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoCoinInfo = exports.Network = exports.Type = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys["type"] = "1";
    Keys["network"] = "2";
})(Keys || (Keys = {}));
var Type;
(function(Type) {
    Type[Type["bitcoin"] = 0] = "bitcoin";
})(Type = exports.Type || (exports.Type = {}));
var Network;
(function(Network) {
    Network[Network["mainnet"] = 0] = "mainnet";
    Network[Network["testnet"] = 1] = "testnet";
})(Network = exports.Network || (exports.Network = {}));
class CryptoCoinInfo extends RegistryItem_1.RegistryItem {
    constructor(type, network){
        super();
        this.type = type;
        this.network = network;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_COIN_INFO;
        };
        this.getType = ()=>{
            return this.type || Type.bitcoin;
        };
        this.getNetwork = ()=>{
            return this.network || Network.mainnet;
        };
        this.toDataItem = ()=>{
            const map = {};
            if (this.type) {
                map[Keys.type] = this.type;
            }
            if (this.network) {
                map[Keys.network] = this.network;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoCoinInfo = CryptoCoinInfo;
CryptoCoinInfo.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const type = map[Keys.type];
    const network = map[Keys.network];
    return new CryptoCoinInfo(type, network);
};
CryptoCoinInfo.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoCoinInfo.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoCoinInfo.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PathComponent = void 0;
class PathComponent {
    constructor(args){
        this.getIndex = ()=>this.index;
        this.isWildcard = ()=>this.wildcard;
        this.isHardened = ()=>this.hardened;
        this.index = args.index;
        this.hardened = args.hardened;
        if (this.index !== undefined) {
            this.wildcard = false;
        } else {
            this.wildcard = true;
        }
        if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {
            throw new Error(`#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`);
        }
    }
}
exports.PathComponent = PathComponent;
PathComponent.HARDENED_BIT = 0x80000000; //# sourceMappingURL=PathComponent.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoKeypath = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const PathComponent_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["components"] = 1] = "components";
    Keys[Keys["source_fingerprint"] = 2] = "source_fingerprint";
    Keys[Keys["depth"] = 3] = "depth";
})(Keys || (Keys = {}));
class CryptoKeypath extends RegistryItem_1.RegistryItem {
    constructor(components = [], sourceFingerprint, depth){
        super();
        this.components = components;
        this.sourceFingerprint = sourceFingerprint;
        this.depth = depth;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_KEYPATH;
        };
        this.getPath = ()=>{
            if (this.components.length === 0) {
                return undefined;
            }
            const components = this.components.map((component)=>{
                return `${component.isWildcard() ? '*' : component.getIndex()}${component.isHardened() ? "'" : ''}`;
            });
            return components.join('/');
        };
        this.getComponents = ()=>this.components;
        this.getSourceFingerprint = ()=>this.sourceFingerprint;
        this.getDepth = ()=>this.depth;
        this.toDataItem = ()=>{
            const map = {};
            const components = [];
            this.components && this.components.forEach((component)=>{
                if (component.isWildcard()) {
                    components.push([]);
                } else {
                    components.push(component.getIndex());
                }
                components.push(component.isHardened());
            });
            map[Keys.components] = components;
            if (this.sourceFingerprint) {
                map[Keys.source_fingerprint] = this.sourceFingerprint.readUInt32BE(0);
            }
            if (this.depth !== undefined) {
                map[Keys.depth] = this.depth;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoKeypath = CryptoKeypath;
CryptoKeypath.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const pathComponents = [];
    const components = map[Keys.components];
    if (components) {
        for(let i = 0; i < components.length; i += 2){
            const isHardened = components[i + 1];
            const path = components[i];
            if (typeof path === 'number') {
                pathComponents.push(new PathComponent_1.PathComponent({
                    index: path,
                    hardened: isHardened
                }));
            } else {
                pathComponents.push(new PathComponent_1.PathComponent({
                    hardened: isHardened
                }));
            }
        }
    }
    const _sourceFingerprint = map[Keys.source_fingerprint];
    let sourceFingerprint;
    if (_sourceFingerprint) {
        sourceFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
        sourceFingerprint.writeUInt32BE(_sourceFingerprint, 0);
    }
    const depth = map[Keys.depth];
    return new CryptoKeypath(pathComponents, sourceFingerprint, depth);
};
CryptoKeypath.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoKeypath.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoKeypath.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoHDKey = void 0;
const bs58check_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/bs58check@2.1.2/node_modules/bs58check/index.js [app-client] (ecmascript)");
const CryptoCoinInfo_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)");
const CryptoKeypath_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["is_master"] = 1] = "is_master";
    Keys[Keys["is_private"] = 2] = "is_private";
    Keys[Keys["key_data"] = 3] = "key_data";
    Keys[Keys["chain_code"] = 4] = "chain_code";
    Keys[Keys["use_info"] = 5] = "use_info";
    Keys[Keys["origin"] = 6] = "origin";
    Keys[Keys["children"] = 7] = "children";
    Keys[Keys["parent_fingerprint"] = 8] = "parent_fingerprint";
    Keys[Keys["name"] = 9] = "name";
    Keys[Keys["note"] = 10] = "note";
})(Keys || (Keys = {}));
class CryptoHDKey extends RegistryItem_1.RegistryItem {
    constructor(args){
        super();
        this.isECKey = ()=>{
            return false;
        };
        this.getKey = ()=>this.key;
        this.getChainCode = ()=>this.chainCode;
        this.isMaster = ()=>this.master;
        this.isPrivateKey = ()=>!!this.privateKey;
        this.getUseInfo = ()=>this.useInfo;
        this.getOrigin = ()=>this.origin;
        this.getChildren = ()=>this.children;
        this.getParentFingerprint = ()=>this.parentFingerprint;
        this.getName = ()=>this.name;
        this.getNote = ()=>this.note;
        this.getBip32Key = ()=>{
            var _a, _b, _c;
            let version;
            let depth;
            let index = 0;
            let parentFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4).fill(0);
            if (this.isMaster()) {
                version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from('0488ADE4', 'hex');
                depth = 0;
                index = 0;
            } else {
                depth = ((_a = this.getOrigin()) === null || _a === void 0 ? void 0 : _a.getComponents().length) || ((_b = this.getOrigin()) === null || _b === void 0 ? void 0 : _b.getDepth());
                const paths = (_c = this.getOrigin()) === null || _c === void 0 ? void 0 : _c.getComponents();
                const lastPath = paths[paths.length - 1];
                if (lastPath) {
                    index = lastPath.isHardened() ? lastPath.getIndex() + 0x80000000 : lastPath.getIndex();
                    if (this.getParentFingerprint()) {
                        parentFingerprint = this.getParentFingerprint();
                    }
                }
                if (this.isPrivateKey()) {
                    version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from('0488ADE4', 'hex');
                } else {
                    version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from('0488B21E', 'hex');
                }
            }
            const depthBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(1);
            depthBuffer.writeUInt8(depth, 0);
            const indexBuffer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
            indexBuffer.writeUInt32BE(index, 0);
            const chainCode = this.getChainCode();
            const key = this.getKey();
            return (0, bs58check_1.encode)(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].concat([
                version,
                depthBuffer,
                parentFingerprint,
                indexBuffer,
                chainCode,
                key
            ]));
        };
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_HDKEY;
        };
        this.getOutputDescriptorContent = ()=>{
            var _a, _b, _c, _d, _e, _f, _g;
            let result = '';
            if (this.getOrigin()) {
                if (((_a = this.getOrigin()) === null || _a === void 0 ? void 0 : _a.getSourceFingerprint()) && ((_b = this.getOrigin()) === null || _b === void 0 ? void 0 : _b.getPath())) {
                    result += `${(_d = (_c = this.getOrigin()) === null || _c === void 0 ? void 0 : _c.getSourceFingerprint()) === null || _d === void 0 ? void 0 : _d.toString('hex')}/${(_e = this.getOrigin()) === null || _e === void 0 ? void 0 : _e.getPath()}`;
                }
            }
            result += this.getBip32Key();
            if (this.getChildren()) {
                if ((_f = this.getChildren()) === null || _f === void 0 ? void 0 : _f.getPath()) {
                    result += `/${(_g = this.getChildren()) === null || _g === void 0 ? void 0 : _g.getPath()}`;
                }
            }
            return result;
        };
        this.setupMasterKey = (args)=>{
            this.master = true;
            this.key = args.key;
            this.chainCode = args.chainCode;
        };
        this.setupDeriveKey = (args)=>{
            this.master = false;
            this.privateKey = args.isPrivateKey;
            this.key = args.key;
            this.chainCode = args.chainCode;
            this.useInfo = args.useInfo;
            this.origin = args.origin;
            this.children = args.children;
            this.parentFingerprint = args.parentFingerprint;
            this.name = args.name;
            this.note = args.note;
        };
        this.toDataItem = ()=>{
            const map = {};
            if (this.master) {
                map[Keys.is_master] = true;
                map[Keys.key_data] = this.key;
                map[Keys.chain_code] = this.chainCode;
            } else {
                if (this.privateKey !== undefined) {
                    map[Keys.is_private] = this.privateKey;
                }
                map[Keys.key_data] = this.key;
                if (this.chainCode) {
                    map[Keys.chain_code] = this.chainCode;
                }
                if (this.useInfo) {
                    const useInfo = this.useInfo.toDataItem();
                    useInfo.setTag(this.useInfo.getRegistryType().getTag());
                    map[Keys.use_info] = useInfo;
                }
                if (this.origin) {
                    const origin = this.origin.toDataItem();
                    origin.setTag(this.origin.getRegistryType().getTag());
                    map[Keys.origin] = origin;
                }
                if (this.children) {
                    const children = this.children.toDataItem();
                    children.setTag(this.children.getRegistryType().getTag());
                    map[Keys.children] = children;
                }
                if (this.parentFingerprint) {
                    map[Keys.parent_fingerprint] = this.parentFingerprint.readUInt32BE(0);
                }
                if (this.name !== undefined) {
                    map[Keys.name] = this.name;
                }
                if (this.note !== undefined) {
                    map[Keys.note] = this.note;
                }
            }
            return new lib_1.DataItem(map);
        };
        if (args.isMaster) {
            this.setupMasterKey(args);
        } else {
            this.setupDeriveKey(args);
        }
    }
}
exports.CryptoHDKey = CryptoHDKey;
CryptoHDKey.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const isMaster = !!map[Keys.is_master];
    const isPrivateKey = map[Keys.is_private];
    const key = map[Keys.key_data];
    const chainCode = map[Keys.chain_code];
    const useInfo = map[Keys.use_info] ? CryptoCoinInfo_1.CryptoCoinInfo.fromDataItem(map[Keys.use_info]) : undefined;
    const origin = map[Keys.origin] ? CryptoKeypath_1.CryptoKeypath.fromDataItem(map[Keys.origin]) : undefined;
    const children = map[Keys.children] ? CryptoKeypath_1.CryptoKeypath.fromDataItem(map[Keys.children]) : undefined;
    const _parentFingerprint = map[Keys.parent_fingerprint];
    let parentFingerprint = undefined;
    if (_parentFingerprint) {
        parentFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
        parentFingerprint.writeUInt32BE(_parentFingerprint, 0);
    }
    const name = map[Keys.name];
    const note = map[Keys.note];
    return new CryptoHDKey({
        isMaster,
        isPrivateKey,
        key,
        chainCode,
        useInfo,
        origin,
        children,
        parentFingerprint,
        name,
        note
    });
};
CryptoHDKey.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoHDKey.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoHDKey.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoECKey = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["curve"] = 1] = "curve";
    Keys[Keys["private"] = 2] = "private";
    Keys[Keys["data"] = 3] = "data";
})(Keys || (Keys = {}));
class CryptoECKey extends RegistryItem_1.RegistryItem {
    constructor(args){
        super();
        this.isECKey = ()=>{
            return true;
        };
        this.getCurve = ()=>this.curve || 0;
        this.isPrivateKey = ()=>this.privateKey || false;
        this.getData = ()=>this.data;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_ECKEY;
        };
        this.toDataItem = ()=>{
            const map = {};
            if (this.curve) {
                map[Keys.curve] = this.curve;
            }
            if (this.privateKey !== undefined) {
                map[Keys.private] = this.privateKey;
            }
            map[Keys.data] = this.data;
            return new lib_1.DataItem(map);
        };
        this.getOutputDescriptorContent = ()=>{
            return this.data.toString('hex');
        };
        this.data = args.data;
        this.curve = args.curve;
        this.privateKey = args.privateKey || undefined;
    }
}
exports.CryptoECKey = CryptoECKey;
CryptoECKey.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const curve = map[Keys.curve];
    const privateKey = map[Keys.private];
    const data = map[Keys.data];
    if (!data) {
        throw new Error(`#[ur-registry][CryptoECKey][fn.fromDataItem]: decoded [dataItem][#data.data] is undefined: ${dataItem}`);
    }
    return new CryptoECKey({
        data,
        curve,
        privateKey
    });
};
CryptoECKey.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoECKey.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoECKey.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Bytes = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
class Bytes extends RegistryItem_1.RegistryItem {
    constructor(bytes){
        super();
        this.bytes = bytes;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.BYTES;
        };
        this.getData = ()=>this.bytes;
        this.toDataItem = ()=>{
            return new lib_1.DataItem(this.bytes);
        };
    }
}
exports.Bytes = Bytes;
Bytes.fromDataItem = (dataItem)=>{
    const bytes = dataItem.getData();
    if (!bytes) {
        throw new Error(`#[ur-registry][Bytes][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);
    }
    return new Bytes(bytes);
};
Bytes.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return Bytes.fromDataItem(dataItem);
}; //# sourceMappingURL=Bytes.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MultiKey = void 0;
const CryptoECKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)");
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
const DataItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/DataItem.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["threshold"] = 1] = "threshold";
    Keys[Keys["keys"] = 2] = "keys";
})(Keys || (Keys = {}));
class MultiKey extends RegistryItem_1.RegistryItem {
    constructor(threshold, keys){
        super();
        this.threshold = threshold;
        this.keys = keys;
        this.getThreshold = ()=>this.threshold;
        this.getKeys = ()=>this.keys;
        this.toDataItem = ()=>{
            const map = {};
            map[Keys.threshold] = this.threshold;
            const keys = this.keys.map((k)=>{
                const dataItem = k.toDataItem();
                dataItem.setTag(k.getRegistryType().getTag());
                return dataItem;
            });
            map[Keys.keys] = keys;
            return new DataItem_1.DataItem(map);
        };
        this.getOutputDescriptorContent = ()=>{
            return [
                this.getThreshold(),
                this.keys.map((k)=>k.getOutputDescriptorContent()).join(',')
            ].join(',');
        };
    }
}
exports.MultiKey = MultiKey;
MultiKey.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const threshold = map[Keys.threshold];
    const _keys = map[Keys.keys];
    const keys = [];
    _keys.forEach((k)=>{
        if (k.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {
            keys.push(CryptoHDKey_1.CryptoHDKey.fromDataItem(k));
        } else if (k.getTag() === RegistryType_1.RegistryTypes.CRYPTO_ECKEY.getTag()) {
            keys.push(CryptoECKey_1.CryptoECKey.fromDataItem(k));
        }
    });
    return new MultiKey(threshold, keys);
}; //# sourceMappingURL=MultiKey.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoOutput = void 0;
const CryptoECKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)");
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const MultiKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const ScriptExpression_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)");
class CryptoOutput extends RegistryItem_1.RegistryItem {
    constructor(scriptExpressions, cryptoKey){
        super();
        this.scriptExpressions = scriptExpressions;
        this.cryptoKey = cryptoKey;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_OUTPUT;
        };
        this.getCryptoKey = ()=>this.cryptoKey;
        this.getHDKey = ()=>{
            if (this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {
                return this.cryptoKey;
            } else {
                return undefined;
            }
        };
        this.getECKey = ()=>{
            if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey) {
                return this.cryptoKey;
            } else {
                return undefined;
            }
        };
        this.getMultiKey = ()=>{
            if (this.cryptoKey instanceof MultiKey_1.MultiKey) {
                return this.cryptoKey;
            } else {
                return undefined;
            }
        };
        this.getScriptExpressions = ()=>this.scriptExpressions;
        this._toOutputDescriptor = (seIndex)=>{
            if (seIndex >= this.scriptExpressions.length) {
                return this.cryptoKey.getOutputDescriptorContent();
            } else {
                return `${this.scriptExpressions[seIndex].getExpression()}(${this._toOutputDescriptor(seIndex + 1)})`;
            }
        };
        this.toString = ()=>{
            return this._toOutputDescriptor(0);
        };
        this.toDataItem = ()=>{
            let dataItem = this.cryptoKey.toDataItem();
            if (this.cryptoKey instanceof CryptoECKey_1.CryptoECKey || this.cryptoKey instanceof CryptoHDKey_1.CryptoHDKey) {
                dataItem.setTag(this.cryptoKey.getRegistryType().getTag());
            }
            const clonedSe = [
                ...this.scriptExpressions
            ];
            clonedSe.reverse().forEach((se)=>{
                const tagValue = se.getTag();
                if (dataItem.getTag() === undefined) {
                    dataItem.setTag(tagValue);
                } else {
                    dataItem = new lib_1.DataItem(dataItem, tagValue);
                }
            });
            return dataItem;
        };
    }
}
exports.CryptoOutput = CryptoOutput;
CryptoOutput.fromDataItem = (dataItem)=>{
    const scriptExpressions = [];
    let _dataItem = dataItem;
    while(true){
        let _tag = _dataItem.getTag();
        const se = ScriptExpression_1.ScriptExpression.fromTag(_tag);
        if (se) {
            scriptExpressions.push(se);
            if (_dataItem.getData() instanceof lib_1.DataItem) {
                _dataItem = _dataItem.getData();
                _tag = _dataItem.getTag();
            } else {
                break;
            }
        } else {
            break;
        }
    }
    const seLength = scriptExpressions.length;
    const isMultiKey = seLength > 0 && (scriptExpressions[seLength - 1].getExpression() === ScriptExpression_1.ScriptExpressions.MULTISIG.getExpression() || scriptExpressions[seLength - 1].getExpression() === ScriptExpression_1.ScriptExpressions.SORTED_MULTISIG.getExpression());
    if (isMultiKey) {
        const multiKey = MultiKey_1.MultiKey.fromDataItem(_dataItem);
        return new CryptoOutput(scriptExpressions, multiKey);
    }
    if (_dataItem.getTag() === RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getTag()) {
        const cryptoHDKey = CryptoHDKey_1.CryptoHDKey.fromDataItem(_dataItem);
        return new CryptoOutput(scriptExpressions, cryptoHDKey);
    } else {
        const cryptoECKey = CryptoECKey_1.CryptoECKey.fromDataItem(_dataItem);
        return new CryptoOutput(scriptExpressions, cryptoECKey);
    }
};
CryptoOutput.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoOutput.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoOutput.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoPSBT.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoPSBT = void 0;
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
class CryptoPSBT extends RegistryItem_1.RegistryItem {
    constructor(psbt){
        super();
        this.psbt = psbt;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.CRYPTO_PSBT;
        this.getPSBT = ()=>this.psbt;
        this.toDataItem = ()=>{
            return new lib_1.DataItem(this.psbt);
        };
    }
}
exports.CryptoPSBT = CryptoPSBT;
CryptoPSBT.fromDataItem = (dataItem)=>{
    const psbt = dataItem.getData();
    if (!psbt) {
        throw new Error(`#[ur-registry][CryptoPSBT][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);
    }
    return new CryptoPSBT(psbt);
};
CryptoPSBT.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoPSBT.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoPSBT.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoAccount.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoAccount = void 0;
const _1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/index.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["masterFingerprint"] = 1] = "masterFingerprint";
    Keys[Keys["outputDescriptors"] = 2] = "outputDescriptors";
})(Keys || (Keys = {}));
class CryptoAccount extends RegistryItem_1.RegistryItem {
    constructor(masterFingerprint, outputDescriptors){
        super();
        this.masterFingerprint = masterFingerprint;
        this.outputDescriptors = outputDescriptors;
        this.getRegistryType = ()=>{
            return RegistryType_1.RegistryTypes.CRYPTO_ACCOUNT;
        };
        this.getMasterFingerprint = ()=>this.masterFingerprint;
        this.getOutputDescriptors = ()=>this.outputDescriptors;
        this.toDataItem = ()=>{
            const map = {};
            if (this.masterFingerprint) {
                map[Keys.masterFingerprint] = this.masterFingerprint.readUInt32BE(0);
            }
            if (this.outputDescriptors) {
                map[Keys.outputDescriptors] = this.outputDescriptors.map((item)=>item.toDataItem());
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoAccount = CryptoAccount;
CryptoAccount.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const masterFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
    const _masterFingerprint = map[Keys.masterFingerprint];
    if (_masterFingerprint) {
        masterFingerprint.writeUInt32BE(_masterFingerprint, 0);
    }
    const outputDescriptors = map[Keys.outputDescriptors];
    const cryptoOutputs = outputDescriptors.map((item)=>_1.CryptoOutput.fromDataItem(item));
    return new CryptoAccount(masterFingerprint, cryptoOutputs);
};
CryptoAccount.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoAccount.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoAccount.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/errors/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UnknownURTypeError = void 0;
class UnknownURTypeError extends Error {
    constructor(message){
        super(message);
    }
}
exports.UnknownURTypeError = UnknownURTypeError; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.URRegistryDecoder = void 0;
const bc_ur_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js [app-client] (ecmascript)");
const __1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/index.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const errors_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/errors/index.js [app-client] (ecmascript)");
class URRegistryDecoder extends bc_ur_1.URDecoder {
    constructor(){
        super(...arguments);
        this.resultRegistryType = ()=>{
            const ur = this.resultUR();
            switch(ur.type){
                case RegistryType_1.RegistryTypes.BYTES.getType():
                    return __1.Bytes.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_HDKEY.getType():
                    return __1.CryptoHDKey.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_KEYPATH.getType():
                    return __1.CryptoKeypath.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_COIN_INFO.getType():
                    return __1.CryptoCoinInfo.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_ECKEY.getType():
                    return __1.CryptoECKey.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_OUTPUT.getType():
                    return __1.CryptoOutput.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_PSBT.getType():
                    return __1.CryptoPSBT.fromCBOR(ur.cbor);
                case RegistryType_1.RegistryTypes.CRYPTO_ACCOUNT.getType():
                    return __1.CryptoAccount.fromCBOR(ur.cbor);
                default:
                    throw new errors_1.UnknownURTypeError(`#[ur-registry][Decoder][fn.resultRegistryType]: registry type ${ur.type} is not supported now`);
            }
        };
    }
}
exports.URRegistryDecoder = URRegistryDecoder; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/extended/CryptoMultiAccounts.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/.pnpm/next@15.2.3_@babel+core@7.26.10_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CryptoMultiAccounts = void 0;
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
var Keys;
(function(Keys) {
    Keys[Keys["masterFingerprint"] = 1] = "masterFingerprint";
    Keys[Keys["keys"] = 2] = "keys";
    Keys[Keys["device"] = 3] = "device";
})(Keys || (Keys = {}));
class CryptoMultiAccounts extends RegistryItem_1.RegistryItem {
    constructor(masterFingerprint, keys, device){
        super();
        this.masterFingerprint = masterFingerprint;
        this.keys = keys;
        this.device = device;
        this.getRegistryType = ()=>RegistryType_1.RegistryTypes.CRYPTO_MULTI_ACCOUNTS;
        this.getMasterFingerprint = ()=>this.masterFingerprint;
        this.getKeys = ()=>this.keys;
        this.getDevice = ()=>this.device;
        this.toDataItem = ()=>{
            const map = {};
            if (this.masterFingerprint) {
                map[Keys.masterFingerprint] = this.masterFingerprint.readUInt32BE(0);
            }
            if (this.keys) {
                map[Keys.keys] = this.keys.map((item)=>{
                    const dataItem = item.toDataItem();
                    dataItem.setTag(item.getRegistryType().getTag());
                    return dataItem;
                });
            }
            if (this.device) {
                map[Keys.device] = this.device;
            }
            return new lib_1.DataItem(map);
        };
    }
}
exports.CryptoMultiAccounts = CryptoMultiAccounts;
CryptoMultiAccounts.fromDataItem = (dataItem)=>{
    const map = dataItem.getData();
    const masterFingerprint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$2$2e$3_$40$babel$2b$core$40$7$2e$26$2e$10_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].alloc(4);
    const _masterFingerprint = map[Keys.masterFingerprint];
    if (_masterFingerprint) {
        masterFingerprint.writeUInt32BE(_masterFingerprint, 0);
    }
    const keys = map[Keys.keys];
    const cryptoHDKeys = keys.map((item)=>CryptoHDKey_1.CryptoHDKey.fromDataItem(item));
    const device = map[Keys.device];
    return new CryptoMultiAccounts(masterFingerprint, cryptoHDKeys, device);
};
CryptoMultiAccounts.fromCBOR = (_cborPayload)=>{
    const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);
    return CryptoMultiAccounts.fromDataItem(dataItem);
}; //# sourceMappingURL=CryptoMultiAccounts.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/types.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Buffer = exports.extend = exports.PathComponent = exports.ScriptExpressions = exports.MultiKey = exports.CryptoPSBT = exports.CryptoOutput = exports.CryptoECKey = exports.CryptoCoinInfoNetwork = exports.CryptoCoinInfoType = exports.CryptoCoinInfo = exports.CryptoKeypath = exports.CryptoMultiAccounts = exports.CryptoHDKey = exports.CryptoAccount = exports.Bytes = exports.URRegistryDecoder = exports.DataItem = void 0;
const tslib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/patchCBOR.js [app-client] (ecmascript)");
const buffer_1 = __turbopack_context__.f({
    "buffer": {
        id: ()=>"[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)",
        module: ()=>__turbopack_context__.r("[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)")
    },
    "buffer/": {
        id: ()=>"[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)",
        module: ()=>__turbopack_context__.r("[project]/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js [app-client] (ecmascript)")
    }
})("buffer/");
Object.defineProperty(exports, "Buffer", {
    enumerable: true,
    get: function() {
        return buffer_1.Buffer;
    }
});
const CryptoHDKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoHDKey", {
    enumerable: true,
    get: function() {
        return CryptoHDKey_1.CryptoHDKey;
    }
});
const CryptoKeypath_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoKeypath", {
    enumerable: true,
    get: function() {
        return CryptoKeypath_1.CryptoKeypath;
    }
});
const CryptoCoinInfo_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoCoinInfo", {
    enumerable: true,
    get: function() {
        return CryptoCoinInfo_1.CryptoCoinInfo;
    }
});
Object.defineProperty(exports, "CryptoCoinInfoType", {
    enumerable: true,
    get: function() {
        return CryptoCoinInfo_1.Type;
    }
});
Object.defineProperty(exports, "CryptoCoinInfoNetwork", {
    enumerable: true,
    get: function() {
        return CryptoCoinInfo_1.Network;
    }
});
const CryptoECKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoECKey", {
    enumerable: true,
    get: function() {
        return CryptoECKey_1.CryptoECKey;
    }
});
const Bytes_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/Bytes.js [app-client] (ecmascript)");
Object.defineProperty(exports, "Bytes", {
    enumerable: true,
    get: function() {
        return Bytes_1.Bytes;
    }
});
const CryptoOutput_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoOutput", {
    enumerable: true,
    get: function() {
        return CryptoOutput_1.CryptoOutput;
    }
});
const CryptoPSBT_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoPSBT.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoPSBT", {
    enumerable: true,
    get: function() {
        return CryptoPSBT_1.CryptoPSBT;
    }
});
const CryptoAccount_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoAccount.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoAccount", {
    enumerable: true,
    get: function() {
        return CryptoAccount_1.CryptoAccount;
    }
});
const Decoder_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js [app-client] (ecmascript)");
Object.defineProperty(exports, "URRegistryDecoder", {
    enumerable: true,
    get: function() {
        return Decoder_1.URRegistryDecoder;
    }
});
const MultiKey_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)");
Object.defineProperty(exports, "MultiKey", {
    enumerable: true,
    get: function() {
        return MultiKey_1.MultiKey;
    }
});
const ScriptExpression_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/ScriptExpression.js [app-client] (ecmascript)");
Object.defineProperty(exports, "ScriptExpressions", {
    enumerable: true,
    get: function() {
        return ScriptExpression_1.ScriptExpressions;
    }
});
const PathComponent_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)");
Object.defineProperty(exports, "PathComponent", {
    enumerable: true,
    get: function() {
        return PathComponent_1.PathComponent;
    }
});
const RegistryItem_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)");
const RegistryType_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)");
const lib_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
var lib_2 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)");
Object.defineProperty(exports, "DataItem", {
    enumerable: true,
    get: function() {
        return lib_2.DataItem;
    }
});
const utils_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)");
const CryptoMultiAccounts_1 = __turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/extended/CryptoMultiAccounts.js [app-client] (ecmascript)");
Object.defineProperty(exports, "CryptoMultiAccounts", {
    enumerable: true,
    get: function() {
        return CryptoMultiAccounts_1.CryptoMultiAccounts;
    }
});
const URlib = {
    URRegistryDecoder: Decoder_1.URRegistryDecoder,
    Bytes: Bytes_1.Bytes,
    CryptoAccount: CryptoAccount_1.CryptoAccount,
    CryptoHDKey: CryptoHDKey_1.CryptoHDKey,
    CryptoMultiAccounts: CryptoMultiAccounts_1.CryptoMultiAccounts,
    CryptoKeypath: CryptoKeypath_1.CryptoKeypath,
    CryptoCoinInfo: CryptoCoinInfo_1.CryptoCoinInfo,
    CryptoCoinInfoType: CryptoCoinInfo_1.Type,
    CryptoCoinInfoNetwork: CryptoCoinInfo_1.Network,
    CryptoECKey: CryptoECKey_1.CryptoECKey,
    CryptoOutput: CryptoOutput_1.CryptoOutput,
    CryptoPSBT: CryptoPSBT_1.CryptoPSBT,
    MultiKey: MultiKey_1.MultiKey,
    ScriptExpressions: ScriptExpression_1.ScriptExpressions,
    PathComponent: PathComponent_1.PathComponent
};
const cbor = {
    addReader: lib_1.addReader,
    addSemanticDecode: lib_1.addSemanticDecode,
    addSemanticEncode: lib_1.addSemanticEncode,
    addWriter: lib_1.addWriter,
    patchTags: utils_1.patchTags
};
const extend = {
    RegistryTypes: RegistryType_1.RegistryTypes,
    RegistryItem: RegistryItem_1.RegistryItem,
    RegistryType: RegistryType_1.RegistryType,
    decodeToDataItem: lib_1.decodeToDataItem,
    encodeDataItem: lib_1.encodeDataItem,
    cbor
};
exports.extend = extend;
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/errors/index.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/Decoder/index.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/lib/index.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoAccount.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoPSBT.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoHDKey.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/extended/CryptoMultiAccounts.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoOutput.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoCoinInfo.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoECKey.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/MultiKey.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/CryptoKeypath.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/patchCBOR.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/PathComponent.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryItem.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/RegistryType.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/types.js [app-client] (ecmascript)"), exports);
(0, tslib_1.__exportStar)(__turbopack_context__.r("[project]/node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.4/node_modules/@keystonehq/bc-ur-registry/dist/utils.js [app-client] (ecmascript)"), exports);
exports.default = URlib; //# sourceMappingURL=index.js.map
}}),
}]);

//# sourceMappingURL=node_modules__pnpm_5f1996fb._.js.map