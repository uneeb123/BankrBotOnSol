{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/lib/privy.ts"],"sourcesContent":["// Privy configuration\nexport const privyAppId = process.env.NEXT_PUBLIC_PRIVY_APP_ID || \"\";\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;AACf,MAAM,aAAa,iEAAwC","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/components/PrivyClientProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { PrivyProvider } from \"@privy-io/react-auth\";\nimport { privyAppId } from \"../lib/privy\";\n\nexport default function PrivyClientProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <PrivyProvider\n      appId={privyAppId}\n      config={{\n        loginMethods: [\"twitter\"],\n        appearance: {\n          theme: \"dark\",\n          accentColor: \"#000000\",\n        },\n      }}\n    >\n      {children}\n    </PrivyProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,oBAAoB,EAC1C,QAAQ,EAGT;IACC,qBACE,gZAAC,4aAAA,CAAA,gBAAa;QACZ,OAAO,mHAAA,CAAA,aAAU;QACjB,QAAQ;YACN,cAAc;gBAAC;aAAU;YACzB,YAAY;gBACV,OAAO;gBACP,aAAa;YACf;QACF;kBAEC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///Users/uneebagha/Documents/max/BankrBotOnSol/src/components/SolanaWalletProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { FC, ReactNode, useMemo } from \"react\";\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  PhantomWalletAdapter,\n  SolflareWalletAdapter,\n} from \"@solana/wallet-adapter-wallets\";\nimport { WalletModalProvider } from \"@solana/wallet-adapter-react-ui\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\n\n// Default styles that can be overridden by your app\nimport \"@solana/wallet-adapter-react-ui/styles.css\";\n\ninterface SolanaWalletProviderProps {\n  children: ReactNode;\n}\n\nexport const SolanaWalletProvider: FC<SolanaWalletProviderProps> = ({\n  children,\n}) => {\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n  const network = WalletAdapterNetwork.Devnet;\n\n  // You can also provide a custom RPC endpoint.\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n  // Initialize all the supported wallet adapters\n  const wallets = useMemo(\n    () => [new PhantomWalletAdapter(), new SolflareWalletAdapter()],\n    []\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletModalProvider>{children}</WalletModalProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\nexport default SolanaWalletProvider;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AACA;AAbA;;;;;;;;;AAsBO,MAAM,uBAAsD,CAAC,EAClE,QAAQ,EACT;IACC,oEAAoE;IACpE,MAAM,UAAU,iYAAA,CAAA,uBAAoB,CAAC,MAAM;IAE3C,8CAA8C;IAC9C,MAAM,WAAW,CAAA,GAAA,uWAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAA,GAAA,yTAAA,CAAA,gBAAa,AAAD,EAAE,UAAU;QAAC;KAAQ;IAEhE,+CAA+C;IAC/C,MAAM,UAAU,CAAA,GAAA,uWAAA,CAAA,UAAO,AAAD,EACpB,IAAM;YAAC,IAAI,yYAAA,CAAA,uBAAoB;YAAI,IAAI,2YAAA,CAAA,wBAAqB;SAAG,EAC/D,EAAE;IAGJ,qBACE,gZAAC,iYAAA,CAAA,qBAAkB;QAAC,UAAU;kBAC5B,cAAA,gZAAC,6XAAA,CAAA,iBAAc;YAAC,SAAS;YAAS,WAAW;sBAC3C,cAAA,gZAAC,wYAAA,CAAA,sBAAmB;0BAAE;;;;;;;;;;;;;;;;AAI9B;uCAEe","debugId":null}}]
}